$.widget("ui.anglepicker", $.ui.mouse, {
    widgetEventPrefix: "angle",
    _init: function() {
        this._mouseInit();
        this.pointer = $('<div class="ui-anglepicker-pointer"></div>');
        this.pointer.append('<div class="ui-anglepicker-dot"></div>');
        this.pointer.append('<div class="ui-anglepicker-line"></div>');
        this.element.addClass("ui-anglepicker");
        this.element.append(this.pointer);
        this.setDegrees(this.options.value)
    },
    _propagate: function(a, b) { this._trigger(a, b, this.ui()) },
    _create: function() {},
    destroy: function() {
        this._mouseDestroy();
        this.element.removeClass("ui-anglepicker");
        this.pointer.remove()
    },
    _mouseCapture: function(a) {
        var b = this.element.offset();
        this.width = this.element.width();
        this.height = this.element.height();
        this.startOffset = { x: b.left + this.width / 2, y: b.top + this.height / 2 };
        this.element.is("ui-anglepicker-dragging") || (this.setDegreesFromEvent(a), this._propagate("change", a));
        return !0
    },
    _mouseStart: function(a) {
        this.element.addClass("ui-anglepicker-dragging");
        this.setDegreesFromEvent(a);
        this._propagate("start", a)
    },
    _mouseStop: function(a) {
        this.element.removeClass("ui-anglepicker-dragging");
        this._propagate("stop", a)
    },
    _mouseDrag: function(a) {
        this.setDegreesFromEvent(a);
        this._propagate("change", a)
    },
    _setOption: function(a, b) { this._super(a, b) },
    ui: function() { return { element: this.element, value: this.options.value } },
    value: function(a) {
        if (!arguments.length) return this.options.value;
        var b = this.options.value;
        this.setDegrees(a);
        b !== this.options.value && this._propagate("change");
        return this
    },
    drawRotation: function() {
        var a = "rotate(" + -(this.options.clockwise ? this.options.value : -this.options.value) + "deg)";
        this.pointer.css({ "-webkit-transform": a, "-moz-transform": a, "-ms-transform": a, "-o-transform": a, transform: a })
    },
    setDegrees: function(a) {
        this.options.value = this.clamp(a);
        this.drawRotation()
    },
    clamp: function(a) { "number" !== typeof a && (a = parseInt(a, 10), isNaN(a) && (a = 0)); for (var b = this.options.min, c = b + 360; a < b;) a += 360; for (; a > c;) a -= 360; return a },
    setDegreesFromEvent: function(a) {
        var b = this.startOffset.y - a.pageY;
        b = this.options.clockwise ? b : -b;
        var c = a.pageX - this.startOffset.x,
            d = Math.round(180 / Math.PI * Math.atan(b / c),
                10);
        d = a.shiftKey ? this.roundToMultiple(d, this.options.shiftSnap) : this.roundToMultiple(d, this.options.snap);
        0 > c && 0 <= b ? d += 180 : 0 > b && 0 > c && (d -= 180);
        this.setDegrees(d)
    },
    roundToMultiple: function(a, b) {
        var c = a / b,
            d = Math.floor(c);
        return .5 < c - d ? (d + 1) * b : d * b
    },
    options: { distance: 1, delay: 1, snap: 1, min: 0, shiftSnap: 15, value: 90, clockwise: !0 }
});

function UserColor(a) { a && a.format && a.color ? (this.format = a.format, this.color = a.color, "hex" === this.format && "#" === this.color[0] && (this.color = this.color.slice(1))) : (this.format = "rgb", this.color = { r: 46, g: 74, b: 117 }) }
UserColor.prototype.getAlpha = function() { return "a" !== this.format[this.format.length - 1] ? 1 : this.color.a };
UserColor.prototype.changeHSLLevels = function(a, b, c) {
    var d = this.format;
    "a" === d[d.length - 1] ? this.changeFormatColor("hsla") : this.changeFormatColor("hsl");
    a = (this.color.h + a) % 360;
    b = this.color.s * (b / 100 + 1);
    c = this.color.l * (c / 100 + 1);
    this.color.h = 0 > a ? a + 360 : a;
    this.color.s = clamp(Math.round(b), 0, 100);
    this.color.l = clamp(Math.round(c), 0, 100);
    this.changeFormatColor(d)
};
UserColor.prototype.clone = function() { var a, b = {}; if ("hex" == this.format) return new UserColor({ format: "hex", color: this.color }); for (a = 0; a < this.format.length; a++) b[this.format[a]] = this.color[this.format[a]]; return new UserColor({ format: this.format, color: b }) };
UserColor.prototype.changeFormatColor = function(a) {
    var b = {};
    if (a == this.format) return this.color;
    if ("rgb" == this.format || "rgba" == this.format) "hsl" == a || "hsla" == a ? b = rgb2hsl(this.color) : "hex" == a ? b = rgb2hex(this.color) : "rgb" == a ? b = _remove_alpha(this.color) : "rgba" == a && (b = this.color);
    if ("hsl" == this.format || "hsla" == this.format) "rgb" == a || "rgba" == a ? b = hsl2rgb(this.color) : "hex" == a ? b = hsl2hex(this.color) : "hsl" == a ? b = _remove_alpha(this.color) : "hsla" == a && (b = this.color);
    if ("hex" == this.format)
        if ("rgb" == a || "rgba" == a) b = hex2rgb(this.color);
        else if ("hsl" == a || "hsla" == a) b = hex2hsl(this.color);
    this.format = a;
    this.color = b
};
UserColor.prototype.displayColor = function(a) {
    var b = "",
        c = this;
    a && a != this.format && (c = this.clone(), c.changeFormatColor(a));
    "hex" != c.format && (b = c.format + "(");
    "hsl" == c.format || "hsla" == c.format ? (b += c.color.h + ",", b += parseFloat(c.color.s) + "%,", b += parseFloat(c.color.l) + "%") : "rgb" == c.format || "rgba" == c.format ? (b += c.color.r + ",", b += c.color.g + ",", b += c.color.b) : "hex" == c.format && (b += "#" + c.color);
    "a" == c.format[c.format.length - 1] && (b += "," + c.color.a);
    "hex" != c.format && (b += ")");
    return b
};
UserColor.prototype.equals = function(a) {
    var b = a.format = this.format;
    b && "hex" === a.format ? b = a.color == this.color : b && "rgb" == a.format.slice(0, 3) ? b = (b = (b = a.color.r == this.color.r) && a.color.g == this.color.g) && a.color.b == this.color.b : b && "hsl" == a.format.slice(0, 3) && (b = (b = (b = a.color.h == this.color.h) && a.color.s == this.color.s) && a.color.l == this.color.l);
    b && "a" == a.format[a.format.length - 1] && (b = b && a.color.a == this.color.a);
    return b
};

function rgb2hsl(a) {
    var b = a.r / 255,
        c = a.g / 255,
        d = a.b / 255,
        e = Math.max(b, c, d),
        f = Math.min(b, c, d),
        h = (e + f) / 2;
    if (e == f) var g = f = 0;
    else {
        var k = e - f;
        f = .5 < h ? k / (2 - e - f) : k / (e + f);
        switch (e) {
            case b:
                g = (c - d) / k + (c < d ? 6 : 0);
                break;
            case c:
                g = (d - b) / k + 2;
                break;
            case d:
                g = (b - c) / k + 4
        }
        g /= 6
    }
    b = { h: clamp(Math.round(360 * g) % 360, 0, 360), s: clamp(Math.round(100 * f), 0, 100), l: clamp(Math.round(100 * h), 0, 100) };
    if (a.a || 0 == a.a) b.a = a.a;
    return b
}

function hsl2rgb(a) {
    function b(g, k, l) {
        0 > l && (l += 1);
        1 < l && --l;
        return l < 1 / 6 ? g + 6 * (k - g) * l : .5 > l ? k : l < 2 / 3 ? g + (k - g) * (2 / 3 - l) * 6 : g
    }
    var c = a.h / 360,
        d = parseFloat(a.s) / 100,
        e = parseFloat(a.l) / 100,
        f = {};
    c %= 1;
    if (0 == d) e = d = c = e;
    else {
        f = .5 > e ? e * (1 + d) : e + d - e * d;
        var h = 2 * e - f;
        e = b(h, f, c + 1 / 3);
        d = b(h, f, c);
        c = b(h, f, c - 1 / 3)
    }
    f = { r: clamp(Math.round(255 * e), 0, 255), g: clamp(Math.round(255 * d), 0, 255), b: clamp(Math.round(255 * c), 0, 255) };
    if (a.a || 0 == a.a) f.a = a.a;
    return f
}

function hex2rgb(a) {
    "#" == a.charAt(0) && (a = a.substr(1));
    "000000" === a && (a += "00");
    var b = a.charAt(0) + a.charAt(1);
    var c = a.charAt(2) + a.charAt(3);
    var d = a.charAt(4) + a.charAt(5);
    a = (a = a.charAt(6) + a.charAt(7)) ? parseFloat(parseInt(parseInt(a, 16) / 255 * 1E3) / 1E3) : 1;
    b = parseInt(b, 16);
    c = parseInt(c, 16);
    d = parseInt(d, 16);
    return { r: b, g: c, b: d, a: a }
}

function rgb2hex(a) {
    function b(d) { d = d.toString(16); return 1 == d.length ? "0" + d : d }
    var c = b(a.r) + b(a.g) + b(a.b);
    a = Math.round(255 * parseFloat(a.a)).toString(16);
    b(a);
    return c += b(a)
}

function hsl2hex(a) { return rgb2hex(hsl2rgb(a)) }

function hex2hsl(a) { return rgb2hsl(hex2rgb(a)) }

function _remove_alpha(a) {
    var b = {},
        c;
    for (c in a) "a" != c && (b[c] = a[c]);
    return b
}

function clamp(a, b, c) { return a < b ? b : a > c ? c : a }

function parseColor(a) {
    a = a.replace(/ /gi, "");
    if (a.match("transparent")) return new UserColor({ format: "rgba", color: { r: 0, g: 0, b: 0, a: 0 } });
    var b = a.match("#[0-9a-fA-F]{8}");
    if (b || (b = a.match("#[0-9a-fA-F]{6}"))) return new UserColor({ color: b[0], format: "hex" });
    var c = a.match(/[0-9]+/gi);
    b = a.match(/[0-1]\.[0-9]+/);
    if (!c || 3 > c.length) return !1;
    b || (b = [parseInt(c[3])]);
    b[0] = Math.round(100 * b[0]) / 100;
    if (a.match("rgb\\([0-9]+,[0-9]+,[0-9]+\\)")) return new UserColor({
        color: {
            r: parseInt(c[0]),
            g: parseInt(c[1]),
            b: parseInt(c[2]),
            a: 1
        },
        format: "rgba"
    });
    if (a.match("rgba\\([0-9]+,[0-9]+,[0-9]+,[0-1](.[0-9]+)?\\)")) return new UserColor({ color: { r: parseInt(c[0]), g: parseInt(c[1]), b: parseInt(c[2]), a: parseFloat(b[0]) }, format: "rgba" });
    if (a.match("hsl\\([0-9]+,[0-9]+%,[0-9]+%\\)")) return new UserColor({ color: { h: parseInt(c[0]), s: parseInt(c[1]), l: parseInt(c[2]), a: 1 }, format: "hsl" });
    if (a.match("hsla\\([0-9]+,[0-9]+%,[0-9]+%,[0-1](.[0-9]+)?\\)")) {
        a = parseInt(c[0]);
        var d = parseInt(c[1]);
        c = parseInt(c[2]);
        b = { h: a, s: d, l: c, a: parseFloat(b[0]) };
        return new UserColor({
            color: b,
            format: "hsla"
        })
    }
    return !1
}
"use strict";
var addAMark, gradient;
console.time("hex");
var EDITOR = $("#gradient-editor .gradient-real"),
    PREVIEW = $("#gradient-preview .gradient-real"),
    COLOR_LOCATION_SLIDER = $("#color-location-slider-bar");

function GradientCSS(a) {
    var b;
    this.parse = !0;
    this.colorStopHSL = null;
    this.widthDefault = EDITOR.width() || 560;
    a && (this.backgroundColor = a.color || "rgba(0, 0, 0, 0)", this.format = a.format || "rgba", this.order = a.order || ["0"], this.priority = a.priority || 0, this.gradientIndex = a.css, (b = _importCssCode(a.css[this.priority].bg_image)) ? (this.linearOrientation = 0 === b.linearOrientation ? 0 : b.linearOrientation || "to bottom", this.radialShape = b.radialShape || "ellipse", this.radialSize = b.radialSize || "farthest-corner", this.radialHorizontalSize =
            b.radialHorizontalSize || 50, this.radialHorizontalSizeUnit = b.radialHorizontalSizeUnit || "em", this.radialVerticalSize = b.radialVerticalSize || 50, this.radialVerticalSizeUnit = b.radialVerticalSizeUnit || "em", this.radialVerticalPosition = 0 === b.radialVerticalPosition ? 0 : b.radialVerticalPosition || "center", this.radialHorizontalPosition = 0 === b.radialHorizontalPosition ? 0 : b.radialHorizontalPosition || "center", this.radialVerticalPositionUnit = b.radialVerticalPositionUnit || "key-value", this.radialHorizontalPositionUnit = b.radialHorizontalPositionUnit ||
            "key-value", this.conicStartAngle = b.conicStartAngle || 0, this.conicHorizontalPosition = 0 === b.conicHorizontalPosition ? 0 : b.conicHorizontalPosition || "center", this.conicVerticalPosition = 0 === b.conicVerticalPosition ? 0 : b.conicVerticalPosition || "center", this.conicHorizontalPositionUnit = b.conicHorizontalPositionUnit || "px", this.conicVerticalPositionUnit = b.conicVerticalPositionUnit || "px", this.type = b.type || "linear", this.repeat = b.repeat || !1, this.colorStops = _generateColorStops(b, this.widthDefault), this.changeFormatColor(this.format)) :
        a.css && (this.parse = !1))
}
GradientCSS.prototype.addStopMarker = function(a, b, c) {
    var d = b.location,
        e = 0,
        f = [];
    f = f.concat(a, [b]);
    f.sort(function(h, g) { return h.location - g.location });
    for (e = 0; e < f.length; e++) f[e] === b ? (f[e].htmlBlock = _createStopMarker(e, b, this.widthDefault), f[e].htmlBlock.addClass("selected")) : f[e].location >= b.location ? f[e].htmlBlock ? (f[e].htmlBlock.removeClass("selected"), f[e].htmlBlock.attr("position", f[e].location), f[e].htmlBlock.attr("imarker", e)) : f[e].htmlBlock = _createStopMarker(e, b, this.widthDefault) : f[e].htmlBlock.removeClass("selected");
    if (c) {
        c = f.length;
        a = [];
        b = [];
        for (e = 0; e < c; e++) f[e].location === d && (a.push(e), b.push(f[e]));
        if (1 < a.length)
            for (e = b.length, b.unshift(b.pop()), d = 0; d < e; d++) f[a[d]] = b[d]
    }
    this.colorStops = f
};
GradientCSS.prototype.removeStopMarker = function(a, b, c) {
    var d, e, f = a.length,
        h = !1;
    if (2 >= a.length) return null;
    var g = [];
    for (d = 0; d < f; d++)
        if (a[d].location != b) g.push(a[d]);
        else if (e = (e = c && c.equals(this.colorStops[d].color)) || !c) { h = a[d]; break } else g.push(a[d]);
    for (b = d + 1; b < f; b++) a[b].htmlBlock.attr("position", a[b].location), a[b].htmlBlock.attr("imarker", b - 1), g.push(a[b]);
    this.colorStops = g;
    return h
};
GradientCSS.prototype.getStopMarker = function(a, b) {
    var c, d = this.colorStops,
        e = d.length,
        f = !1;
    if (b)
        for (c = 0; c < e; c++) { if (d[c].htmlBlock.hasClass("selected")) { f = d[c]; break } } else
            for (c = 0; c < e; c++)
                if (d[c].location === a) { f = d[c]; break }
    return f
};
GradientCSS.prototype.showAllColorStops = function() { var a = this.colorStops; var b = a.length - 1; for ($(".stop-markers").html(""); 0 <= b; b--) a[b].htmlBlock = eventDraggable(".stop-markers", a[b].htmlBlock), a[b].htmlBlock.appendTo($(".stop-markers")) };
GradientCSS.prototype.updateGradientEditor = function() {
    var a = "linear-gradient(to right," + getPoints(this.colorStops, "rgba");
    EDITOR.css("background-image", a)
};
GradientCSS.prototype.updateGradientPreview = function() {
    var a = this.gradientIndex[this.priority];
    if (this.colorStopHSL) var b = this.getCssCode() + getPoints(this.colorStopHSL[this.priority], this.format);
    else b = this.getCssCode() + getPoints(this.colorStops, this.format), a.points = this.colorStops;
    a.bg_image = b;
    a.mini_preview.css("background-image", b)
};
GradientCSS.prototype.updateMarks = function(a) {
    var b, c = a.length;
    for (b = 0; b < c; b++) {
        var d = a[b].color.displayColor("rgba");
        var e = this.colorStops[b].htmlBlock;
        e.attr("color", d);
        e.trinity.attr("color", d);
        e.trinity.css("background-color", d)
    }
};
GradientCSS.prototype.saveHSLStops = function() {
    if (!this.colorStopHSL || 0 === this.colorStopHSL.length) return null;
    var a;
    var b = this.gradientIndex;
    var c = this.colorStopHSL;
    var d = c.length;
    var e = c[this.priority],
        f = e.length;
    for (a = 0; a < d; a++) b[a].points = c[a];
    for (a = 0; a < f; a++) b = e[a].color, d = b.displayColor("rgba"), c = this.gradientIndex[this.priority].points[a], c.color = b.clone(), c.htmlBlock.trinity.css("background-color", d), c.htmlBlock.attr("color", d);
    this.colorStopHSL = null;
    _resetHslPanel();
    $(".adjust-color").hide()
};
GradientCSS.prototype.changeFormatColor = function(a) {
    var b, c = this.gradientIndex,
        d = c.length;
    for (b = 0; b < d; b++) c[b].bg_image = c[b].pattern + " " + _changeFormat(c[b].points, a) + ")";
    return a
};

function _changeFormat(a, b) {
    var c, d = "",
        e = a.length;
    for (c = 1; c < e; c++) a[c].color.changeFormatColor(b), d += ", " + a[c].color.displayColor() + " " + a[c].location + "%";
    a[0].color.changeFormatColor(b);
    return d = a[0].color.displayColor() + " " + a[0].location + "%" + d
}
GradientCSS.prototype.showFormatColor = function(a) {
    var b, c = "",
        d = gradient.order,
        e = gradient.gradientIndex,
        f = d.length;
    for (b = 0; b < f; b++) !1 !== e[d[b]].visible && (c += ", " + e[d[b]].pattern + " " + _showFormat(e[d[b]].points, a) + ")");
    return c = c.substring(2)
};

function _showFormat(a, b) {
    var c, d = "",
        e = a.length;
    for (c = 1; c < e; c++) d += ", " + a[c].color.displayColor(b) + " " + a[c].location + "%";
    return d = a[0].color.displayColor(b) + " " + a[0].location + "%" + d
}
GradientCSS.prototype.updateHSLLevels = function(a, b, c) {
    var d = this.colorStopHSL = [],
        e, f = this.gradientIndex,
        h = this.priority,
        g = f.length;
    b = clamp(b, -100, 100);
    c = clamp(c, -100, 100);
    for (e = 0; e < g; e++) {
        var k = e === h ? _changeHSLLevels(f[e].points, a, b, c, e, d, f, !0) : _changeHSLLevels(f[e].points, a, b, c, e, d, f);
        f[e].bg_image = k;
        f[e].mini_preview.css("background-image", k)
    }
    this.colorStops = this.colorStopHSL[this.priority];
    this.updateGradientEditor();
    this.updateMarks(this.colorStops);
    _updateGradientCSS(["bg_image"])
};

function _changeHSLLevels(a, b, c, d, e, f, h, g) {
    var k = "",
        l = [],
        p = a.length;
    if (g)
        for (g = 0; g < p; g++) l.push({ location: a[g].location, htmlBlock: a[g].htmlBlock, color: a[g].color.clone() });
    else
        for (g = 0; g < p; g++) l.push({ location: a[g].location, color: a[g].color.clone() });
    for (a = 1; a < p; a++) l[a].color.changeHSLLevels(b, c, d), k += "," + l[a].color.displayColor("rgba") + " " + l[a].location + "%";
    l[0].color.changeHSLLevels(b, c, d);
    k = l[0].color.displayColor("rgba") + " " + l[0].location + "%" + k;
    f.push(l);
    return k = h[e].pattern + " " + k + ")"
}
GradientCSS.prototype.reverseGradient = function() {
    this.colorStops = _reverseMarks(this.colorStops, this.widthDefault);
    this.updateGradientPreview();
    this.updateGradientEditor();
    _updateGradientCSS(["bg_image"])
};
GradientCSS.prototype.getCssCode = function() {
    var a = "";
    var b = this.type;
    var c = this.repeat;
    if ("linear" === b) b = this.linearOrientation, a += "linear-gradient(" + b, a = "number" === typeof b ? a + "deg," : a + ",";
    else if ("radial" === b) {
        var d = this.radialShape;
        b = this.radialHorizontalPosition;
        var e = this.radialVerticalPosition,
            f = this.radialHorizontalPositionUnit,
            h = this.radialVerticalPositionUnit;
        "number" === typeof b && (b += f);
        "number" === typeof e && (e += h);
        d = "ellipse" === d ? this.radialSize.match(/closest-side|closest-corner|farthest-side|farthest-corner/) ?
            this.radialSize : this.radialHorizontalSize + this.radialHorizontalSizeUnit + " " + this.radialVerticalSize + this.radialVerticalSizeUnit : this.radialSize.match(/closest-side|closest-corner|farthest-side|farthest-corner/) ? this.radialSize : this.radialHorizontalSize + this.radialHorizontalSizeUnit;
        a += "radial-gradient(" + this.radialShape + " " + d + " at " + b + " " + e + ","
    } else "conic" === b && (b = this.conicStartAngle, e = this.conicHorizontalPosition, d = this.conicHorizontalPositionUnit, f = this.conicVerticalPosition, h = this.conicVerticalPositionUnit,
        "number" === typeof e && (e += d), "number" === typeof f && (f += h), a += "conic-gradient(from " + b + "deg at " + e + " " + f + ",");
    c && (a = "repeating-" + a);
    return this.gradientIndex[this.priority].pattern = a
};

function getPoints(a, b) { var c, d = a.length; var e = " " + _displayColorStop(a[0].color, a[0].location, b); for (c = 1; c < d; c++) e += ", " + _displayColorStop(a[c].color, a[c].location, b); return e + ")" }

function eventDraggable(a, b) {
    var c;
    b.draggable({
        axis: "x",
        containment: a,
        start: function(d, e) {
            c = gradient.getStopMarker(parseInt(e.helper.attr("position")));
            _getActiveElement().removeClass("selected");
            $(this).addClass("selected")
        },
        drag: function(d) {
            c = _dragAndDrop(gradient, this, c);
            gradient.updateGradientEditor();
            gradient.updateGradientPreview();
            _updateGradientCSS(["bg_image"])
        },
        stop: function(d) {
            c = _dragAndDrop(gradient, this, c);
            c = null;
            gradient.showAllColorStops()
        }
    });
    b.css("position", "");
    return b
}

function _dragAndDrop(a, b, c) {
    var d = Math.round(b.offsetLeft / a.widthDefault * 100),
        e = c.location;
    if (e === d) return c;
    100 <= d && (d = 100, c.htmlBlock.css("left", b.widthDefault + "px"));
    b = {};
    b.location = d;
    b.htmlBlock = c.htmlBlock.clone();
    b.htmlBlock.attr("position", d);
    b.color = c.color.clone();
    d > e ? a.addStopMarker(a.colorStops, b, !0) : a.addStopMarker(a.colorStops, b, !1);
    a.removeStopMarker(a.colorStops, e, c.color);
    $("#color-location").val(d);
    $("#color-location-slider-bar").slider("value", d);
    a.saveHSLStops();
    return b
}

function _generateColorStops(a, b) {
    var c, d = a.points,
        e = d.length,
        f = [];
    for (c = 0; c < e; c++) {
        var h = d[c];
        h.htmlBlock = _createStopMarker(c, d[c], b);
        f.push(h)
    }
    return f
}

function _reverseMarks(a, b) {
    var c, d = a.length,
        e = [];
    for (c = 0; c < d; c++) e.push({ location: a[c].location, color: a[c].color.clone() });
    for (c = 0; c < d; c++) {
        a[c].location = 100 - e[a.length - c - 1].location;
        a[c].color = e[a.length - c - 1].color;
        var f = a[c].htmlBlock;
        f.attr("position", a[c].location);
        f.attr("color", a[c].color.displayColor("rgba"));
        f.css("left", a[c].location * b / 100 + "px");
        f.trinity.css("background-color", a[c].color.displayColor("rgba"))
    }
    return a
}

function _refreshLocation(a, b, c) {
    var d = {};
    var e = a.attr("position");
    a = parseColor(a.attr("color"));
    d.location = b;
    d.color = a;
    b > parseFloat(e) ? c.addStopMarker(gradient.colorStops, d, !0) : c.addStopMarker(gradient.colorStops, d, !1);
    c.removeStopMarker(gradient.colorStops, e, a);
    c.updateGradientPreview();
    c.updateGradientEditor();
    c.showAllColorStops();
    _updateGradientCSS(["bg_image"])
}

function _calculatePosition(a, b) { var c = Math.round(a / b * 100) - 1; return 0 > c ? 0 : 100 < c ? 100 : c }

function _createStopMarker(a, b, c) {
    var d = $("<div></div>");
    var e = b.color.clone();
    var f = $("<div class='color-knob'></div>");
    f.append(d);
    d.css("background-color", e.displayColor("rgba"));
    f.attr("title", "Color stop");
    f.attr("color", e.displayColor("rgba"));
    f.addClass("stop-marker");
    f.attr("position", b.location);
    f.attr("imarker", a);
    f.css("left", b.location * c / 100 + "px");
    f.trinity = d;
    return f
}

function _displayColorStop(a, b, c) { return a.displayColor(c) + " " + b + "%" }

function _importAllGradientsFromLocalStorage() {
    var a = localStorage.getItem("swatches16");
    a || (a = [{ v: " linear-gradient(315deg, rgba(92,46,145,1) 0%, rgba(172,84,160,1) 100%)", w: " 8px 8px", x: " 0px 0px", y: " repeat", z: "rgba(0,0,0,0)" }, {
        v: " linear-gradient(45deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,0.2) 1%, rgba(255,255,255,0.2) 12%, rgba(255,255,255,1) 12%, rgba(255,255,255,0.2) 13%, rgba(255,255,255,0.2) 25%, rgba(255,255,255,0) 25%, rgba(255,255,255,0) 50%, rgba(255,255,255,1) 50%, rgba(255,255,255,0.2) 51%, rgba(255,255,255,0.2) 62%, rgba(255,255,255,1) 62%, rgba(255,255,255,0.2) 63%, rgba(255,255,255,0.2) 75%, rgba(255,255,255,0) 75%), linear-gradient(315deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,0.2) 1%, rgba(255,255,255,0.2) 12%, rgba(255,255,255,1) 12%, rgba(255,255,255,0.2) 13%, rgba(255,255,255,0.2) 25%, rgba(255,255,255,0) 25%, rgba(255,255,255,0) 50%, rgba(255,255,255,1) 50%, rgba(255,255,255,0.2) 51%, rgba(255,255,255,0.2) 62%, rgba(255,255,255,1) 62%, rgba(255,255,255,0.2) 63%, rgba(255,255,255,0.2) 75%, rgba(255,255,255,0) 75%), linear-gradient(45deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,0.2) 1%, rgba(255,255,255,0.2) 12%, rgba(255,255,255,1) 12%, rgba(255,255,255,0.2) 13%, rgba(255,255,255,0.2) 25%, rgba(255,255,255,0) 25%, rgba(255,255,255,0) 50%, rgba(255,255,255,1) 50%, rgba(255,255,255,0.2) 51%, rgba(255,255,255,0.2) 62%, rgba(255,255,255,1) 62%, rgba(255,255,255,0.2) 63%, rgba(255,255,255,0.2) 75%, rgba(255,255,255,0) 75%), linear-gradient(315deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,0.2) 1%, rgba(255,255,255,0.2) 12%, rgba(255,255,255,1) 12%, rgba(255,255,255,0.2) 13%, rgba(255,255,255,0.2) 25%, rgba(255,255,255,0) 25%, rgba(255,255,255,0) 50%, rgba(255,255,255,1) 50%, rgba(255,255,255,0.2) 51%, rgba(255,255,255,0.2) 62%, rgba(255,255,255,1) 62%, rgba(255,255,255,0.2) 63%, rgba(255,255,255,0.2) 75%, rgba(255,255,255,0) 75%)",
        w: " 160px 50px,  160px 50px,  160px 50px,  160px 50px",
        x: " 0px 0px,  0px 0px,  80px 50px,  80px 50px",
        y: " repeat,  repeat,  repeat,  repeat",
        z: "rgba(0,173,255,1)"
    }, {
        v: " linear-gradient(315deg, rgba(157,32,82,1) 25%, rgba(0,0,0,0) 25%, rgba(0,0,0,0) 50%, rgba(157,32,82,1) 50%, rgba(157,32,82,1) 75%, rgba(0,0,0,0) 75%), linear-gradient(45deg, rgba(17,22,39,1) 30%, rgba(86,26,60,1) 30%, rgba(86,26,60,1) 50%, rgba(17,22,39,1) 50%, rgba(17,22,39,1) 80%, rgba(86,26,60,1) 80%)",
        w: " 48px 48px,  32px 32px",
        x: " 10px 10px,  0px 0px",
        y: " repeat,  repeat",
        z: "rgba(127,89,108,1)"
    }, {
        v: " radial-gradient(ellipse farthest-corner at 50% 50%, rgba(22,60,40,1) 20%, rgba(0,0,0,0) 20%), radial-gradient( rgba(191,191,191,1) 20%, rgba(0,0,0,0) 20%), linear-gradient(-135deg, rgba(0,0,0,0) 48%, rgba(0,89,255,1) 49%, rgba(0,89,255,1) 51%, rgba(0,0,0,0) 52%), linear-gradient(135deg, rgba(0,0,0,0) 48%, rgba(49,155,102,1) 49%, rgba(49,155,102,1) 51%, rgba(0,0,0,0) 52%)",
        w: " 20px 20px,  20px 20px,  20px 20px,  20px 20px",
        x: " 0px 0px,  10px 10px,  0px 0px,  0px 0px",
        y: " repeat,  repeat,  repeat,  repeat",
        z: "rgba(222,7,114,1)"
    }, {
        v: " linear-gradient(45deg, rgba(114,191,69,1) 15%, rgba(0,0,0,0) 15%, rgba(0,0,0,0) 85%, rgba(114,191,69,1) 80%), linear-gradient(135deg, rgba(0,0,0,0) 33%, rgba(0,168,95,1) 33%, rgba(0,168,95,1) 65%, rgba(173,179,25,1) 66%, rgba(0,0,0,0) 67%), linear-gradient(45deg, rgba(0,0,0,0) 33%, rgba(114,191,69,1) 33%, rgba(114,191,69,1) 66%, rgba(0,0,0,0) 60%)",
        w: " 20px 20px,  20px 20px,  20px 20px",
        x: " 0px 0px,  0px 0px,  0px 0px",
        y: " repeat,  repeat,  repeat",
        z: "rgba(216,223,32,1)"
    }, { v: " radial-gradient(ellipse farthest-corner at 50% 50%, rgba(255,255,255,1) 20%, rgba(0,0,0,0) 20%), linear-gradient( rgba(247,148,29,1) 0%, rgba(242,88,34,1) 100%)", w: " 12px 12px,  auto", x: " 0px 0px,  0% 0%", y: " repeat,  repeat", z: "rgba(0,0,0,0)" }, {
        v: " radial-gradient(ellipse farthest-corner at 50% 50%, rgba(255,255,255,0.05) 20%, rgba(0,0,0,0) 20%), radial-gradient(at 50% 50%, rgba(255,202,8,1) 6%, rgba(0,0,0,0) 8%), radial-gradient(at 50% 50%, rgba(255,202,8,1) 6%, rgba(0,0,0,0) 8%), linear-gradient(45deg, rgba(0,0,0,0) 48%, rgba(0,0,0,1) 49%, rgba(0,0,0,1) 51%, rgba(0,0,0,0) 52%), linear-gradient(315deg, rgba(0,0,0,0) 48%, rgba(0,0,0,1) 49%, rgba(0,0,0,1) 51%, rgba(0,0,0,0) 52%)",
        w: " 20px 20px,  20px 20px,  20px 20px,  20px 20px,  20px 20px",
        x: " 0px 0px,  0px 0px,  10px 10px,  0px 0px,  0px 0px",
        y: " repeat,  repeat,  repeat,  repeat,  repeat",
        z: "rgba(38,38,38,1)"
    }, {
        v: " linear-gradient(45deg, rgba(221,204,170,1) 12%, rgba(0,0,0,0) 12%, rgba(0,0,0,0) 88%, rgba(221,204,170,1) 88%), linear-gradient(135deg, rgba(0,0,0,0) 37%, rgba(170,136,85,1) 37%, rgba(170,136,85,1) 63%, rgba(0,0,0,0) 63%), linear-gradient(45deg, rgba(0,0,0,0) 37%, rgba(221,204,170,1) 37%, rgba(221,204,170,1) 63%, rgba(0,0,0,0) 63%)",
        w: " 25px 25px,  25px 25px,  25px 25px",
        x: " 0% 0%,  0% 0%,  0% 0%",
        y: " repeat,  repeat,  repeat",
        z: "rgba(119,85,51,1)"
    }, {
        v: " repeating-conic-gradient(from 0deg at center center, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 5%, rgba(0,0,0,1) 5%, rgba(0,0,0,1) 10%, rgba(1,171,206,1) 10%, rgba(1,171,206,1) 15%, rgba(0,0,0,1) 15%, rgba(0,0,0,1) 20%, rgba(247,148,29,1) 20%, rgba(247,148,29,1) 25%, rgba(255,202,8,1) 25%, rgba(255,202,8,1) 30%, rgba(212,30,78,1) 30%, rgba(212,30,78,1) 35%, rgba(0,0,0,1) 35%, rgba(0,0,0,1) 40%, rgba(92,46,145,1) 40%, rgba(92,46,145,1) 45%, rgba(0,0,0,1) 45%, rgba(0,0,0,1) 50%, rgba(0,166,94,1) 50%, rgba(0,166,94,1) 55%, rgba(0,0,0,0) 55%)",
        w: " auto auto",
        x: " 0% 0%",
        y: " repeat",
        z: "rgba(0,0,0,0)"
    }, { v: " linear-gradient(135deg, rgba(236,237,220,1) 25%, rgba(0,0,0,0) 26%), linear-gradient(225deg, rgba(236,237,220,1) 25%, rgba(0,0,0,0) 26%), linear-gradient(315deg, rgba(236,237,220,1) 25%, rgba(0,0,0,0) 26%), linear-gradient(45deg, rgba(236,237,220,1) 25%, rgba(0,0,0,0) 26%)", w: " 10px 10px, 10px 10px, 10px 10px, 10px 10px", x: " -5px 0px, -5px 0px,  0% 0%,  0% 0%", y: " repeat,  repeat,  repeat,  repeat", z: "rgba(17,0,0,1)" }, {
        v: "radial-gradient(circle closest-side at 50% 50%, rgba(0,0,0,0) 96%, rgba(0,0,0,0.3) 100%), radial-gradient(circle closest-side at 50% 50%, rgba(0,0,0,0) 96%, rgba(0,0,0,0.3) 100%)",
        w: "30px 10px,  30px 8px",
        x: "0px 0px,  15px 15px",
        y: "repeat,  repeat",
        z: "rgba(42,139,40,1)"
    }, { v: "repeating-radial-gradient(ellipse farthest-corner at left top, rgba(0,165,223,1) 0%, rgba(62,20,123,1) 20%, rgba(226,0,121,1) 40%, rgba(223,19,44,1) 60%, rgba(243,239,21,1) 80%, rgba(0,152,71,1) 100%)", w: "auto", x: "0% 0%", y: "repeat", z: "rgba(0,0,0,0)" }, {
        v: "radial-gradient(ellipse farthest-corner at center center, rgba(171,222,210,1) 12%,rgba(0,0,0,0) 12%,rgba(0,0,0,0) 88%,rgba(171,222,210,1) 88%), linear-gradient( rgba(118,46,77,1) 0%,rgba(251,0,255,1) 50%,rgba(255,0,47,1) 100%)",
        w: "25px 25px, auto",
        x: "0% 0%, 0% 0%",
        y: "repeat, repeat",
        z: "rgba(119,85,51,1)"
    }, { v: "radial-gradient(ellipse farthest-corner at center center, rgba(206,222,171,1) 12%,rgba(0,0,0,0) 12%,rgba(0,0,0,0) 88%,rgba(206,222,171,1) 88%), linear-gradient( rgba(53,46,118,1) 0%,rgba(0,123,255,1) 50%,rgba(89,0,255,1) 100%)", w: "25px 25px, auto", x: "0% 0%, 0% 0%", y: "repeat, repeat", z: "rgba(119,85,51,1)" }], a = JSON.stringify(a), localStorage.setItem("swatches16", a));
    a = localStorage.getItem("swatches16");
    var b = JSON.parse(a);
    var c = b.length;
    for (a = 0; a < c; a++) _importGradientFromLocalStorage(a, b[a])
}

function _importGradientFromLocalStorage(a, b) {
    var c = $("<li class='gradient-background'><div class='load-preset' data-index='" + a + "'></div></li>");
    c.appendTo(".presets-list");
    c = $(c.find("div"));
    c.css("background-image", b.v);
    c.css("background-size", b.w);
    c.css("background-position", b.x);
    c.css("background-repeat", b.y);
    c.css("background-color", b.z)
}

function _importCssCode(a) {
    var b = !1;
    if (!a) return !1;
    var c = a.match("repeating") ? !0 : !1;
    a.match("linear-gradient") ? (a = a.slice(a.search("linear-gradient") + 15), b = _importLinear(a, c)) : a.match("radial-gradient") ? (a = a.slice(a.search("radial-gradient") + 15), b = _importRadial(a, c)) : a.match("conic-gradient") && (a = a.slice(a.search("conic-gradient") + 14), b = _importConic(a, c));
    c && (b.pattern = "repeating-" + b.pattern);
    b.repeat = c;
    return b
}

function _importLinear(a) {
    var b = {};
    var c = a.match("\\([-a-zA-Z0-9%. ()]+,")[0];
    c.match(/rgb|hsl|#/) ? b.pattern = "linear-gradient(" : b.pattern = "linear-gradient" + c;
    if (c = a.match(/\((\-?\d{1,3}(?:\.\d+)?(deg|g?rad|turn))|\((to (?:bottom left|bottom right|top left|top right|left bottom|left top|right top|right bottom|bottom|left|right|top))/))
        if (a = a.replace(c[0], ""), c[0].match(/\d/)) {
            var d = c[2];
            c = c[1];
            "deg" === d ? c = parseFloat(c) : "grad" === d ? c = parseFloat(c) / 1.1111111 : "rad" === d ? c = parseFloat(c) / .0174532925199 : "turn" ===
                d && (c = 360 * parseFloat(c))
        } else c = c[3];
    else a = a.replace("(", ""), c = "to bottom";
    b.linearOrientation = c;
    b.points = _importCssCodeGetListPoints(a);
    b.type = "linear";
    return b
}

function _importRadial(a) {
    var b, c, d = {};
    var e = a.match("\\([-a-zA-Z0-9%. ()]+,")[0];
    e.match(/rgb|hsl|#/) ? d.pattern = "radial-gradient(" : d.pattern = "radial-gradient" + e;
    a = a.replace(/\s/g, "");
    (e = a.match(/^\((circle|ellipse)/)) ? (a = a.replace(e[0], ""), e = e[1]) : (a = a.replace("(", ""), e = "ellipse");
    if ("circle" === e)
        if (b = a.match(/^(\d{1,3}(?:\.\d+)?)(px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh)|closest-side|closest-corner|farthest-side|farthest-corner/))
            if (a = a.replace(b[0], ""), b[0].match(/\d{1,4}/)) {
                var f = b[1];
                var h = b[2];
                b = f + h
            } else b = b[0];
    else b = "farthest-corner";
    else if (b = a.match(/^(\d{1,3}(?:\.\d+)?)(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh)(\d{1,3}(?:\.\d+)?)(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh)|^(\d{1,3}(?:\.\d+)?)(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh)|closest-side|closest-corner|farthest-side|farthest-corner/))
        if (a = a.replace(b[0], ""), b[1] && b[3]) {
            f = parseFloat(b[1]);
            h = b[2];
            var g = parseFloat(b[3]);
            var k = b[4];
            b = f + h + " " + g + k
        } else b[5] ? (f = parseFloat(b[5]), h = b[6], g = parseFloat(b[5]), k = b[6], b = f + h + " " + g + k) : b = b[0];
    else b =
        "farthest-corner";
    if (c = a.match(/^at(center|left|right|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))(bottom|center|top|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))|^at(bottom|center|left|right|top|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))/))
        if (a = a.replace(c[0], ""), c[1] && c[3]) { if (c[1].match(/\d/)) { var l = parseFloat(c[1]); var p = c[2] } else l = c[1]; if (c[3].match(/\d/)) { var n = parseFloat(c[3]); var m = c[4] } else n = c[3] } else c[5] && (c[5].match(/\d/) ? (l = parseFloat(c[5]),
            p = c[6], n = "center") : c[5].match(/center|left|right/) ? (l = c[5], n = "center") : c[5].match(/center|bottom|top/) && (n = c[5], l = "center"));
    else l = 50, p = "%", n = 50, m = "%";
    d.radialSize = b;
    d.radialShape = e;
    d.radialHorizontalSize = f;
    d.radialVerticalSize = g;
    d.radialHorizontalSizeUnit = h;
    d.radialVerticalSizeUnit = k;
    d.radialHorizontalPosition = l;
    d.radialHorizontalPositionUnit = p;
    d.radialVerticalPositionUnit = m;
    d.radialVerticalPosition = n;
    d.type = "radial";
    d.points = _importCssCodeGetListPoints(a);
    return d
}

function _importConic(a) {
    var b = {};
    var c = a.match("\\([-a-zA-Z0-9%. ()]+,")[0];
    c.match(/rgb|hsl|#/) ? b.pattern = "conic-gradient(" : b.pattern = "conic-gradient" + c;
    a = a.replace(/\s/g, "");
    if (c = a.match(/^\(from(\-?\d{1,3}(?:\.\d+)?)(deg|g?rad|turn)/)) {
        a = a.replace(c[0], "");
        var d = c[2];
        c = c[1];
        d.match(/deg/) ? c = parseFloat(c) : d.match(/grad/) ? c = parseFloat(c) / 1.1111111 : d.match(/rad/) ? c = parseFloat(c) / .0174532925199 : d.match(/turn/) && (c = 360 * parseFloat(c))
    } else a = a.replace("(", ""), c = 0;
    if (d = a.match(/^at(center|left|right|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))(bottom|center|top|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))|^at(bottom|center|left|right|top|-?\d{1,3}(?:\.\d+)?(%|px|mm|cm|in|em|rem|en|ex|ch|vm|vw|vh))/))
        if (a =
            a.replace(d[0], ""), d[1] && d[3]) { if (d[1].match(/\d/)) { var e = parseFloat(d[1]); var f = d[2] } else e = d[1]; if (d[3].match(/\d/)) { var h = parseFloat(d[3]); var g = d[4] } else h = d[3] } else d[5] && (d[5].match(/\d/) ? (e = parseFloat(d[5]), f = d[6], h = "center") : d[5].match(/center|left|right/) ? (e = d[5], h = "center") : d[5].match(/center|bottom|top/) && (h = d[5], e = "center"));
    b.conicStartAngle = c;
    b.conicHorizontalPosition = e;
    b.conicVerticalPosition = h;
    b.conicHorizontalPositionUnit = f;
    b.conicVerticalPositionUnit = g;
    b.points = _importCssCodeGetListPoints(a);
    b.type = "conic";
    return b
}

function _importCssCodeGetListPoints(a) {
    a.startsWith(",") || (a = "," + a);
    var b, c = [];
    for (a = a.replace(/ /gi, "");;) {
        var d = {};
        a = a.replace(/,/, "");
        if (b = a.match("^(rgba|rgb|hsl|hsla)\\([a-zA-Z0-9,%.]+\\)")) {
            var e = parseColor(b[0]);
            d.color = e
        } else if (b = a.match("^#[0-9a-fA-F]{8}")) d.color = parseColor(b[0]);
        else if (b = a.match("^#[0-9a-fA-F]{6}")) d.color = parseColor(b[0]);
        else if (b = a.match("transparent")) d.color = new UserColor({ format: "rgba", color: { r: 0, g: 0, b: 0, a: 0 } });
        else break;
        a = a.replace(b[0], "");
        b = a.match("[0-9.]+(%|px|em)");
        if (!b) break;
        d.location = parseInt(a.match("[0-9]+"));
        a = a.replace(b[0], "");
        c.push(d)
    }
    return 2 > c.length ? [] : c
}

function _CSSValueParser(a, b) {
    var c, d = $(".grads__container"),
        e = [],
        f = {},
        h = a.a,
        g = a.b,
        k = a.c.split(","),
        l = a.d.split(","),
        p = a.e;
    g = g.replace(/center/g, "50%");
    g = g.replace(/left|top/g, "0%");
    g = g.replace(/right|bottom/g, "100%");
    g = g.split(",");
    h = h.replace(/\),/g, ")!");
    h = h.split("!");
    var n = h.length;
    if (n > g.length) {
        var m = g;
        do g = g.concat(m); while (g.length < n)
    }
    if (n > l.length) {
        m = l;
        do l = l.concat(m); while (l.length < n)
    }
    if (n > g.length) {
        m = g;
        do g = g.concat(m); while (g.length < n)
    }
    var r = !1;
    if (0 === b || b) r = b;
    for (c = 0; c < n; c++)
        if (!h[c].match(/none/g)) {
            m = {};
            m.bg_image = h[c];
            m.bg_size = k[c];
            m.bg_position = g[c];
            m.bg_repeat = l[c];
            m.visible = !0;
            var q = _importCssCode(h[c]);
            m.pattern = q.pattern;
            m.points = q.points;
            r++;
            q = new G(r, h[c], k[c], g[c], l[c], p);
            m.bg_elem = q.container;
            m.mini_preview = q.mini;
            d.append(m.bg_elem);
            e.push(m)
        }
    d.sortable({ handle: ".grad__handle", start: function(t, u) {}, update: function(t, u) { _updateContainer() } });
    f.bg_prop = e;
    return f
}

function G(a, b, c, d, e, f) {
    this.id = a;
    var h = {};
    var g = $("<li class='grad' id=" + a + "></li>");
    var k = $("<div class='grad__handle'></div>");
    var l = $("<div class='mini-preview'></div>");
    l.css("background-image", b);
    l.css("background-color", f);
    f = this.createSize(c, g);
    var p = this.createPos(d, g);
    var n = this.createRepeat(e, g);
    b = this.createView(a, b, c, d, e, g);
    c = this.createHide(a, g);
    d = this.createRemove(g);
    a = this.createParse(a, g, l);
    this.size = f;
    this.pos = p;
    this.repeat = n;
    this.view = b;
    this.parse = a;
    g.append(d);
    g.append(c);
    g.append(b);
    g.append(f.elem1);
    g.append(f.elem2);
    g.append(p.elem1);
    g.append(p.elem2);
    g.append(n);
    g.append(a);
    g.append(k);
    h.container = g;
    h.mini = l;
    return h
}
G.prototype.createSpinner = function(a, b, c) {
    var d = this.id;
    var e = "bg_size" === b.data("target") ? 0 : -999;
    a.spinner({ max: 999, min: e, create: function() { $(this).spinner("widget").css("float", "left") }, spin: function(f, h) { _updateSpinner(h.value, d, b, c) } });
    a.on("keyup", function(f, h) { _updateSpinner($(this).val(), d, b, c) })
};

function _updateSpinner(a, b, c, d) {
    var e = c.data("type");
    var f = c.data("target");
    var h = a + c.attr("unit");
    d = d.attr("value") + d.attr("unit");
    b = gradient.gradientIndex[b];
    if ("height" === e || "pos-y" === e) var g = d + " " + h;
    else if ("width" === e || "pos-x" === e) g = h + " " + d;
    b[f] = g;
    _updateGradientCSS([f]);
    c.attr("value", a)
}

function _closeAllDropDowns() {
    $(".bg-options").hide();
    $(".grad__css-container").remove();
    $(".grad__view-css").removeClass("is-checked")
}
G.prototype.createSelectBox = function(a, b, c, d, e, f, h, g, k) {
    var l, p = this.id,
        n = a.length,
        m = $("<div class='bg-options'></div>");
    for (l = 0; l < n; l++) {
        var r = $("<div class='bg-option' data-value='" + a[l] + "'><span>" + a[l] + "</span></div>");
        r.click(function() {
            var q = $(this).data("value"),
                t = e.attr("value");
            if ("px" === q || "em" === q || "%" === q) {
                if ("cover" === t || "contain" === t || "" === t) k.text("auto"), c.attr("value", "auto"), c.attr("unit", ""), h.parent().hide();
                g.text(q);
                b.attr("value", f.val());
                b.attr("unit", q);
                d.attr("value", q);
                f.parent().show();
                g.addClass("is-unit-selected")
            } else g.text(q), b.attr("value", q), b.attr("unit", ""), d.attr("value", q), f.parent().hide(), g.removeClass("is-unit-selected"), "cover" === q || "contain" === q ? (k.text(q), c.attr("value", ""), c.attr("unit", ""), e.attr("value", ""), h.parent().hide(), k.removeClass("is-unit-selected")) : "auto" !== q || "cover" !== t && "contain" !== t && "" !== t || (k.text("auto"), c.attr("value", ""), c.attr("unit", ""), h.parent().hide());
            _updateSpinner(b.attr("value"), p, b, c)
        });
        m.append(r);
        m.hide()
    }
    return m
};
G.prototype.createBgElem = function(a, b, c, d, e, f, h, g, k, l) {
    var p = a.options,
        n = a.value;
    a = a.unit;
    b.append(f);
    this.createSpinner(f, b, c);
    var m = this.createSelectBox(p, b, c, d, e, f, h, g, k);
    d.append(g);
    d.append(m);
    b.append(d);
    g.click(function() {
        _closeAllDropDowns();
        if (!l.hasClass("freeze")) {
            var r = g.hasClass("is-unit-selected") ? g.position().left - 70 : g.position().left;
            var q = g.position().top + 34.47;
            m.css("left", r);
            m.css("top", q);
            m.show()
        }
    });
    "number" === typeof n ? (g.text(a), f.val(n), b.attr("unit", a), d.attr("value", a), g.addClass("is-unit-selected")) :
        (g.text(n), f.parent().hide(), b.attr("unit", ""), d.attr("value", n), d.attr("unit", ""));
    b.attr("value", n);
    return b
};
G.prototype.filterSize = function(a) {
    var b, c, d = {};
    a = a.replace(/\s/g, "");
    if (b = a.match(/contain|cover/)) { var e = b[0]; var f = b[0]; var h = c = "" } else if (b = a.match(/((-?\d{1,3})(px|em|rem|%)|(auto))(((-?\d{1,3})(px|em|rem|%))|(auto))?/)) b[4] ? (e = b[4], f = b[4]) : b[2] && b[3] && (e = parseFloat(b[2]), c = b[3], f = parseFloat(b[2]), h = b[3]), b[5] && (b[6] && (f = parseFloat(b[7]), h = b[8]), b[9] && (f = b[9], h = ""));
    d.bg_size_value1 = e;
    d.bg_size_value2 = f;
    d.bg_size_s1 = e;
    d.bg_size_s2 = f;
    d.bg_size_u1 = c;
    d.bg_size_u2 = h;
    return d
};
G.prototype.filterPos = function(a) {
    a = a.replace(/\s/g, "");
    var b = {};
    a = a.match(/(-?\d{1,3})(px|em|rem|%)((-?\d{1,3})(px|em|rem|%))?/);
    if (a[1] && a[3]) { var c = parseFloat(a[1]); var d = a[2]; var e = parseFloat(a[4]); var f = a[5] } else a[1] && !a[3] && (c = parseFloat(a[1]), d = a[2], e = parseFloat(a[1]), f = a[2]);
    b.bg_pos_value1 = c;
    b.bg_pos_value2 = e;
    b.bg_pos_s1 = c;
    b.bg_pos_s2 = e;
    b.bg_pos_u1 = d;
    b.bg_pos_u2 = f;
    return b
};
G.prototype.createSize = function(a, b) {
    var c = {},
        d = {},
        e = this.filterSize(a),
        f = $("<div class='bg'></div>"),
        h = $("<div class='bg'></div>"),
        g = $("<input type='text' class='de' value='0'/>"),
        k = $("<input type='text' class='de' value='0'/>"),
        l = $("<div class='grad__size select-box' data-type='width' data-target='bg_size'></div>"),
        p = $("<div class='grad__size select-box' data-type='height' data-target='bg_size'></div>"),
        n = $("<div class='bg-selected'></div>"),
        m = $("<div class='bg-selected'></div>");
    d.options = "contain cover auto px em %".split(" ");
    d.value = e.bg_size_value1;
    d.unit = e.bg_size_u1;
    c.elem1 = this.createBgElem(d, l, p, f, h, g, k, n, m, b);
    d.value = e.bg_size_value2;
    d.unit = e.bg_size_u2;
    c.elem2 = this.createBgElem(d, p, l, h, f, k, g, m, n, b);
    c.spinner1 = g;
    c.spinner2 = k;
    c.selected1 = n;
    c.selected2 = m;
    return c
};
G.prototype.createPos = function(a, b) {
    var c = {},
        d = {},
        e = this.filterPos(a),
        f = $("<div class='bg'></div>"),
        h = $("<div class='bg'></div>"),
        g = $("<input type='text' class='de' value='0'/>"),
        k = $("<input type='text' class='de' value='0'/>"),
        l = $("<div class='grad__pos select-box' data-type='pos-x' data-target='bg_position'></div>"),
        p = $("<div class='grad__pos select-box' data-type='pos-y' data-target='bg_position'></div>"),
        n = $("<div class='bg-selected'></div>"),
        m = $("<div class='bg-selected'></div>");
    d.options = "left right center px em %".split(" ");
    d.value = e.bg_pos_value1;
    d.unit = e.bg_pos_u1;
    c.elem1 = this.createBgElem(d, l, p, f, h, g, k, n, m, b);
    d.options = "top bottom center px em %".split(" ");
    d.value = e.bg_pos_value2;
    d.unit = e.bg_pos_u2;
    c.elem2 = this.createBgElem(d, p, l, h, f, k, g, m, n, b);
    c.spinner1 = g;
    c.spinner2 = k;
    c.selected1 = n;
    c.selected2 = m;
    return c
};
G.prototype.createRepeat = function(a, b) {
    a = a.replace(/\s/g, "");
    var c = this.id,
        d = $("<div class='grad__repeat'></div>"),
        e = $("<div class='repeat-selected' title='" + a + "'></div>");
    d.append(e);
    var f = ["repeat", "repeat-x", "repeat-y", "no-repeat"],
        h = ["-252px 0", "-294px 0", "-336px 0", "-168px 0"],
        g = f.indexOf(a);
    e.data("index", g);
    e.css("background-position", h[g]);
    e.click(function() {
        if (!b.hasClass("freeze")) {
            var k = $(this).data("index");
            3 === k ? k = 0 : -1 < k && (k += 1);
            e.data("index", k);
            e.attr("title", f[k]);
            gradient.gradientIndex[c].bg_repeat =
                f[k];
            e.css("background-position", h[k]);
            _updateGradientCSS(["bg_repeat"])
        }
    });
    return d
};
G.prototype.createParse = function(a, b, c) {
    var d, e = $("<div class='grad__preview gradient-background'></div>");
    e.append(c);
    c.click(function() { b.hasClass("freeze") || (gradient.saveHSLStops(), $(".grad").removeClass("grad--selected"), b.addClass("grad--selected"), gradient = d = _secLoadGrad(a), _newGrad(), _updateGradientCSS(["bg_image"])) });
    return e
};

function _secLoadGrad(a) { var b = $(".grads__container").sortable("toArray"); return new GradientCSS({ css: gradient.gradientIndex, color: gradient.backgroundColor, priority: a, order: b, format: gradient.format }) }
G.prototype.createHide = function(a, b) {
    var c = this,
        d = $("<input class='grad__hide' type='checkbox' title='hide'/>");
    d.change(function() {
        var e = c.size,
            f = c.pos,
            h = gradient.gradientIndex[a];
        d.is(":checked") ? (h.visible = !1, $(".grad__css-container").remove(), $(".grad__view-css").removeClass("is-checked"), b.addClass("freeze"), e.spinner1.spinner("disable"), e.spinner2.spinner("disable"), f.spinner1.spinner("disable"), f.spinner2.spinner("disable")) : (h.visible = !0, b.removeClass("freeze"), e.spinner1.spinner("enable"),
            e.spinner2.spinner("enable"), f.spinner1.spinner("enable"), f.spinner2.spinner("enable"));
        _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat"])
    });
    return d
};
G.prototype.createRemove = function(a) {
    var b = this.id,
        c = $("<div class='grad__remove' title='remove'></div>");
    c.click(function() {
        if (b === gradient.priority) {
            var d = gradient.order.indexOf(b.toString());
            var e = gradient.order.length - 1;
            if (0 === d && 0 === e) return;
            d === e ? (d = parseFloat(gradient.order[d - 1]), e = gradient.gradientIndex[d].bg_elem, e.addClass("grad--selected"), d = _secLoadGrad(d), d.parse && (gradient = d, _newGrad())) : d < e && (d = parseFloat(gradient.order[d + 1]), e = gradient.gradientIndex[d].bg_elem, e.addClass("grad--selected"),
                d = _secLoadGrad(d), d.parse && (gradient = d, _newGrad()))
        }
        a.remove();
        _updateContainer()
    });
    return c
};

function _updateContainer() {
    gradient.order = $(".grads__container").sortable("toArray");
    _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"])
}
G.prototype.createView = function(a, b, c, d, e, f) {
    var h = $("<div class='grad__view-css' title='view CSS code'></div>");
    h.click(function() {
        if (!f.hasClass("freeze"))
            if ($(this).hasClass("is-checked")) $(this).removeClass("is-checked"), $(".grad__css-container").remove();
            else {
                $(".grad__css-container").remove();
                $(".grad__view-css").removeClass("is-checked");
                $(this).addClass("is-checked");
                var g = gradient.gradientIndex[a],
                    k = $("<div class='grad__css-container'></div>"),
                    l = $("<button style='float: right;'>close</button>");
                g = $("<div class='grad__css' id='js-copy-" + a + "'><div>background-image: " + g.bg_image + ";</div><div>background-size: " + g.bg_size + ";</div><div>background-position: " + g.bg_position + ";</div><div>background-repeat: " + g.bg_repeat + ";</div></div>");
                var p = $("<button class='grad__css__copy' data-clipboard-action='copy' data-clipboard-target='#js-copy-" + a + "'>copy</button>");
                l.click(function() {
                    k.hide();
                    h.removeClass("is-checked")
                });
                k.append(g);
                k.append(p);
                k.append(l);
                f.append(k)
            }
    });
    return h
};
$(document).ready(function() {
    addAMark = !0;
    gradient = firstLoad();
    gradient.showAllColorStops();
    gradient.updateGradientEditor();
    gradient.updateGradientPreview();
    _sliderBarsHSL();
    _createColorSetting();
    _createColorSetting();
    _createSizeSetting();
    _createPosSetting();
    _createAngSetting();
    _importAllGradientsFromLocalStorage();
    _resetPanel();
    _initSettings();
    _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"]);
    new ClipboardJS("#get-copy-css");
    new ClipboardJS(".grad__css__copy")
});

function firstLoad() {
    var a = window.location.hash;
    a && 0 < a.length && (a = unescape(a), a = a.replace(/\\/g, ""), a = a.replace(/'/g, ""), a = a.substr(1), $(".current").attr("style", a));
    return loadGradient($(".current"), "rgba")
}

function _updateGradientCSS(a) {
    var b = gradient.order,
        c = gradient.gradientIndex,
        d = b.length,
        e, f;
    var h = a.length;
    for (e = 0; e < h; e++) {
        var g = "";
        var k = a[e];
        if ("bg_color" === k) {
            g = parseColor(gradient.backgroundColor);
            var l = g.displayColor("rgba");
            g = g.displayColor(gradient.format);
            for (f = 0; f < d; f++) c[b[f]].mini_preview.css("background-color", l);
            _updateHTMLCode(k, g)
        } else {
            for (f = 0; f < d; f++) !1 !== c[b[f]].visible && (g += ", " + c[b[f]][k]);
            g = g.substring(2);
            _updateHTMLCode(k, g)
        }
    }
}

function _updateHTMLCode(a, b) {
    a = a.replace("bg_", "background-");
    PREVIEW.css(a, b);
    $(".current").css(a, b);
    $("#show-code-" + a).html("<b>" + a + ": </b>" + b + ";")
}

function _getGradientCSS(a) {
    var b = {};
    var c, d, e = gradient.order,
        f = gradient.gradientIndex,
        h = e.length,
        g = a.length;
    for (c = 0; c < g; c++) {
        var k = a[c];
        if ("bg_color" === k) k = parseColor(gradient.backgroundColor), k.displayColor("rgba"), k = k.displayColor(gradient.format), b.bg_color = k;
        else {
            var l = "";
            for (d = 0; d < h; d++) !1 !== f[e[d]].visible && (l += ", " + f[e[d]][k]);
            l = l.substring(2);
            b[k] = l
        }
    }
    return b
}
$(".setting__value").click(function(a) {
    var b;
    var c = $(this);
    a = c.data("type");
    if ((b = c.data("value")) || "repeat" === a) gradient[a] = b;
    gradient.updateGradientPreview();
    _updateGradientCSS(["bg_image"]);
    $(".setting__value[data-type='" + a + "']").removeClass("setting__value--active");
    c.addClass("setting__value--active")
});
$(".setting__value[data-type='type']").click(function() { _updateTypeSetting() });
$(".setting__value[data-type='radialShape'][data-value='circle']").click(function() {
    $("#sy").hide();
    $("#radial-vertical-size-unit").hide();
    $("#radial-horizontal-size-unit option[value=p]").hide()
});
$(".setting__value[data-type='radialShape'][data-value='ellipse']").click(function() {
    $("#sy").show();
    $("#radial-vertical-size-unit").show();
    $("#radial-horizontal-size-unit option[value=p]").show()
});
$("#color-location").on("keyup", function(a) {
    gradient.saveHSLStops();
    var b = _getFromField($(this).val(), 0, 100, $("#color-location"));
    _refreshLocation(_getActiveElement(), parseInt(b), gradient);
    a.preventDefault();
    return !1
});
$("#color-location").spinner({
    min: 0,
    max: 100,
    spin: function(a, b) {
        gradient.saveHSLStops();
        _refreshLocation(_getActiveElement(), b.value, gradient);
        $("#color-location-slider-bar").slider("value", b.value)
    }
});
$("#color-location-slider-bar").slider({
    value: 100,
    min: 0,
    max: 100,
    step: 1,
    slide: function(a, b) {
        gradient.saveHSLStops();
        $("#color-location").val(b.value);
        _refreshLocation(_getActiveElement(), b.value, gradient)
    }
});
$("#color-delete-button").click(function(a) {
    gradient.saveHSLStops();
    a = $(".stop-markers .selected");
    if (0 === a.length) return !1;
    var b = parseInt(a.attr("position")),
        c = parseColor(a.attr("color"));
    (b || 0 === b) && gradient.removeStopMarker(gradient.colorStops, b, c) && (gradient.updateGradientPreview(), gradient.updateGradientEditor(), _updateGradientCSS(["bg_image"]), a.remove());
    a = _getActiveElement().attr("position");
    $("#color-location").val(parseFloat(a));
    $("#color-value-button").spectrum("hide");
    return !1
});
$(".stop-markers").click(function(a) {
    if (addAMark) {
        gradient.saveHSLStops();
        var b = _calculatePosition(a.clientX - (this.offsetParent.offsetLeft + this.offsetLeft), gradient.widthDefault);
        var c = (c = $("#color-value-button").spectrum("get").toRgbString()) ? parseColor(c) : gradient.colorStops[0].color.clone();
        gradient.addStopMarker(gradient.colorStops, { color: c, location: b });
        gradient.updateGradientEditor();
        gradient.updateGradientPreview();
        gradient.showAllColorStops();
        _updateGradientCSS(["bg_image"]);
        _selectAMark()
    }
    addAMark = !0;
    a.stopPropagation()
});
$(".stop-markers").on("click", ".color-knob", function(a) {
    gradient.saveHSLStops();
    addAMark = !1;
    a = _getActiveElement();
    var b = $(this).attr("color");
    a.removeClass("selected");
    $(this).addClass("selected");
    _selectAMark();
    $("#color-value-button").spectrum("set", b);
    $("#color-value-button").spectrum("toggle");
    return !1
});
$("#reset-button").click(function() {
    $(".grads__container").html("");
    $(".current").css("background", "repeating-radial-gradient(ellipse farthest-corner at left top, rgba(0,165,223,1) 0%, rgba(62,20,123,1) 20%, rgba(226,0,121,1) 40%, rgba(223,19,44,1) 60%, rgba(243,239,21,1) 80%, rgba(0,152,71,1) 100%)");
    gradient = loadGradient($(".current"), gradient.format);
    gradient.showAllColorStops();
    gradient.updateGradientEditor();
    gradient.updateGradientPreview();
    _updateGradientCSS(["bg_image", "bg_size", "bg_position",
        "bg_repeat", "bg_color"
    ]);
    _resetPanel();
    _initSettings()
});
$(".reverse-btn").click(function() {
    gradient.saveHSLStops();
    gradient.reverseGradient();
    _selectAMark()
});
$("#add-gradient-accept").click(function() {
    var a = gradient.gradientIndex.length;
    var b = _formatCss($(".add-gradient__input").val(), $("#test"));
    var c = _CSSValueParser(b, a - 1);
    a = c.bg_prop.length;
    for (b = 0; b < a; b++) gradient.gradientIndex.push(c.bg_prop[b]);
    _updateContainer();
    $(".add-gradient").hide()
});
$("#import-css-button-ok").click(function() {
    CSS.supports("background-image", $("#import-css-area").val()) || alert("invalid css");
    $(".grads__container").html("");
    var a = _formatCss($("#import-css-area").val(), $("#test"));
    a = { css: _CSSValueParser(a, -1).bg_prop, color: a.e };
    gradient = new GradientCSS(a);
    _newGrad();
    _updateContainer();
    $(".grad").first().addClass("grad--selected")
});
$(".presets-list").on("click", ".load-preset", function() {
    $(".grads__container").html("");
    $(".load-preset").removeClass("actual");
    $(this).addClass("actual");
    gradient = loadGradient($(this), gradient.format);
    _newGrad();
    _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"]);
    $(".add-gradient").hide();
    $(".adjust-color").hide()
});
$(".codepen").click(function() {
    var a = gradient.showFormatColor(gradient.format),
        b = _getGradientCSS(["bg_size", "bg_position", "bg_repeat", "bg_color"]);
    a = JSON.stringify({
        title: "Cool Gradient",
        description: "",
        html: "<div id='gradient'></div>",
        html_pre_processor: "none",
        css: "#gradient {\n  width: 628px;\n  height: 400px;\n background-image: " + a + ";\n  background-size:" + b.bg_size + ";\n  background-position:" + b.bg_position + ";\n  background-repeat:" + b.bg_repeat + ";\n background-color: " + b.bg_color + ";\n}",
        css_pre_processor: "none",
        css_starter: "neither",
        css_prefix_free: !1,
        js: "",
        js_pre_processor: "none",
        js_modernizr: !1,
        js_library: "",
        html_classes: "",
        css_external: "",
        js_external: "",
        template: !0
    }).replace(/"/g, "&quot;").replace(/'/g, "&apos;");
    a = $('<form action="https://codepen.io/pen/define" method="POST" target="_blank" id="pen-define"><input type="hidden" name="data" value=\'' + a + "'></form>");
    $(this).append(a);
    a.submit()
});
$("#get-css-btn").click(function() { $("#get-css-dialog").dialog("open") });
$("#import-css-btn").click(function() { $("#import-css-dialog").dialog("open") });
$("#get-css-dialog").dialog({ maxWidth: 600, width: "auto", autoOpen: !1 });
$("#import-css-dialog").dialog({ maxWidth: 600, width: "auto", autoOpen: !1 });
//$("#report-bug-btn").click(function() { window.open("./contact") });
PREVIEW.resizable({
    resize: function(a, b) {
        var c = $(this).width(),
            d = $(this).height();
        $("#resizable-width").val(c);
        $("#resizable-height").val(d)
    }
});
$(".add-gradient").hide();
$(".adjust-color").hide();
$("#add-gradient-cancel").click(function() { $(".add-gradient").hide() });
$("#add-gradient-btn").click(function() {
    $(".adjust-color").hide();
    $(".add-gradient").show()
});
$("#adjust-color-btn").click(function() {
    $(".add-gradient").hide();
    $(".adjust-color").show()
});
$("#adjust-color-accept").click(function() {
    gradient.saveHSLStops();
    $(".adjust-color").hide()
});
$("#adjust-color-cancel").click(function() {
    gradient.updateHSLLevels(0, 0, 0);
    _resetPanel();
    $(".adjust-color").hide()
});
$("#resizable-width").on("keyup", function() { $("#gradient-preview .gradient-real").css("width", $(this).val()) });
$("#resizable-height").on("keyup", function() { $("#gradient-preview .gradient-real").css("height", $(this).val()) });
$(document).click(function(a) {
    a = a.target;
    $(a).hasClass("bg-selected") ? ($(".grad__css-container").remove(), $(".grad__view-css").removeClass("is-checked")) : ($(a).hasClass("grad__view-css"), $(".bg-options").hide())
});
$(".panel__toggle").click(function() {
    var a = $(this),
        b = a.parent().next();
    a.hasClass("toggle-on") ? (a.removeClass("toggle-on"), a.addClass("toggle-off"), b.hide()) : (a.removeClass("toggle-off"), a.addClass("toggle-on"), b.show())
});

function loadGradient(a, b) {
    var c = {};
    c.a = a.css("background-image");
    c.b = a.css("background-position");
    c.c = a.css("background-size");
    c.d = a.css("background-repeat");
    c.e = a.css("background-color");
    var d = _CSSValueParser(c, -1);
    var e = $(".grads__container").sortable("toArray");
    d.bg_prop[0].bg_elem.addClass("grad--selected");
    return new GradientCSS({ css: d.bg_prop, color: c.e, order: e, format: b })
}

function _formatCss(a, b) {
    var c = {};
    b.attr("style", a);
    c.a = b.css("background-image");
    c.b = b.css("background-position");
    c.c = b.css("background-size");
    c.d = b.css("background-repeat");
    c.e = b.css("background-color");
    return c
}

function _newGrad() {
    gradient.updateGradientEditor();
    gradient.updateGradientPreview();
    gradient.showAllColorStops();
    _resetPanel();
    _initSettings()
}

function _getActiveElement() {
    var a = $(".stop-markers .selected");
    0 === a.length && (a = $($(".stop-markers .stop-marker")[0]), a.addClass("selected"));
    return a
}

function updateInfo(a) {
    var b = _getActiveElement();
    var c = parseFloat(b.attr("position"));
    var d = gradient.getStopMarker(c, !0);
    d && (c = a.displayColor("rgba"), d.color = a, d.htmlBlock.attr("color", c), b.children().css("background-color", c), gradient.updateGradientPreview(), gradient.updateGradientEditor(), _updateGradientCSS(["bg_image"]))
}

function _selectAMark() {
    var a = _getActiveElement().attr("position");
    $("#color-location").val(a);
    $("#color-location-slider-bar").slider("value", a)
}

function _createColorSetting() {
    $("#color-value-button").spectrum({
        preferredFormat: "rgb",
        showAlpha: !0,
        showInput: !0,
        showPalette: !0,
        palette: [
            ["red", "rgba(0, 255, 0, .5)", "rgb(0, 0, 255)"]
        ],
        change: function(a) {
            a = a.toRgbString();
            a = parseColor(a);
            updateInfo(a)
        },
        move: function(a) {
            a = a.toRgbString();
            a = parseColor(a);
            updateInfo(a)
        },
        show: function() {
            var a = _getActiveElement(),
                b = a.offset().left;
            a = a.offset().top + 52;
            var c = $("#color-value-button").spectrum("container");
            c.css("top", a + "px");
            c.css("left", b + "px");
            gradient.saveHSLStops()
        }
    });
    $("#background-color").spectrum({
        preferredFormat: "rgb",
        showAlpha: !0,
        showInput: !0,
        showPalette: !0,
        palette: [
            ["red", "rgba(0, 255, 0, .5)", "rgb(0, 0, 255)"]
        ],
        change: function(a) {
            a = a.toRgbString();
            gradient.backgroundColor = a;
            _updateGradientCSS(["bg_color"])
        },
        move: function(a) {
            a = a.toRgbString();
            gradient.backgroundColor = a;
            _updateGradientCSS(["bg_color"])
        }
    })
}

function _createSizeSetting() {
    function a(c, d, e, f) {
        $(".setting__value[data-type='radialSize']").removeClass("setting__value--active");
        "p" === e && (e = "%");
        "p" === f && (f = "%");
        "circle" === gradient.radialShape ? (gradient.radialHorizontalSize = c, gradient.radialHorizontalSizeUnit = e, gradient.radialVerticalSize = c, gradient.radialVerticalSizeUnit = e, gradient.radialSize = c + e, $("#radial-horizontal-size-unit").addClass("setting__value--active")) : (gradient.radialHorizontalSize = c, gradient.radialHorizontalSizeUnit = e, gradient.radialVerticalSize =
            d, gradient.radialVerticalSizeUnit = f, gradient.radialSize = c + e + " " + d + f, $("#radial-horizontal-size-unit").addClass("setting__value--active"), $("#radial-vertical-size-unit").addClass("setting__value--active"));
        gradient.updateGradientPreview();
        _updateGradientCSS(["bg_image"])
    }

    function b(c, d, e, f) {
        "p" === e && (e = "%");
        "p" === f && (f = "%");
        gradient.radialHorizontalSize = d;
        gradient.radialHorizontalSizeUnit = f;
        gradient.radialVerticalSize = c;
        gradient.radialVerticalSizeUnit = e;
        gradient.radialSize = d + f + " " + c + e;
        gradient.updateGradientPreview();
        _updateGradientCSS(["bg_image"]);
        $(".setting__value[data-type='radialSize']").removeClass("setting__value--active");
        $("#radial-horizontal-size-unit").addClass("setting__value--active");
        $("#radial-vertical-size-unit").addClass("setting__value--active")
    }
    $("#sx").spinner({
        min: 0,
        max: 999,
        value: 0,
        spin: function(c, d) {
            var e = d.value,
                f = $("#sy").val(),
                h = $("#radial-horizontal-size-unit").val(),
                g = $("#radial-vertical-size-unit").val();
            a(e, f, h, g)
        }
    });
    $("#sy").spinner({
        min: 0,
        max: 999,
        value: 0,
        spin: function(c, d) {
            var e =
                d.value,
                f = $("#sx").val(),
                h = $("#radial-vertical-size-unit").val(),
                g = $("#radial-horizontal-size-unit").val();
            b(e, f, h, g)
        }
    });
    $("#sx").on("keyup", function() {
        var c = _getFromField($(this).val(), -999, 999, $("#sx")),
            d = $("#sy").val(),
            e = $("#radial-horizontal-size-unit").val(),
            f = $("#radial-vertical-size-unit").val();
        a(c, d, e, f)
    });
    $("#sy").on("keyup", function() {
        var c = _getFromField($(this).val(), -999, 999, $("#sy")),
            d = $("#sx").val(),
            e = $("#radial-vertical-size-unit").val(),
            f = $("#radial-horizontal-size-unit").val();
        b(c,
            d, e, f)
    });
    $("#radial-horizontal-size-unit").on("change", function() {
        var c = $(this).val();
        "p" === c && (c = "%");
        gradient.radialHorizontalSizeUnit = c;
        gradient.updateGradientPreview();
        _updateGradientCSS(["bg_image"])
    });
    $("#radial-vertical-size-unit").on("change", function() {
        var c = $(this).val();
        "p" === c && (c = "%");
        gradient.radialVerticalSizeUnit = c;
        gradient.updateGradientPreview();
        _updateGradientCSS(["bg_image"])
    })
}

function _createPosSetting() {
    function a(g, k, l, p) {
        g.spinner({
            min: -999,
            max: 999,
            value: 0,
            spin: function(n, m) {
                var r = m.value,
                    q = k.val();
                "p" === q && (q = "%");
                gradient[l] = r;
                gradient[p] = q;
                gradient.updateGradientPreview();
                _updateGradientCSS(["bg_image"]);
                $(".setting__value[data-type='" + l + "']").removeClass("setting__value--active");
                k.addClass("setting__value--active")
            }
        });
        g.on("keyup", function() {
            var n = $(this).val();
            n = _getFromField(n, -999, 999, g);
            var m = k.val();
            "p" === m && (m = "%");
            gradient[l] = n;
            gradient[p] = m;
            gradient.updateGradientPreview();
            _updateGradientCSS(["bg_image"])
        });
        k.on("change", function() {
            var n = $(this).val();
            "p" === n && (n = "%");
            gradient[p] = n;
            gradient.updateGradientPreview();
            _updateGradientCSS(["bg_image"])
        })
    }
    var b = [$("#rpx"), $("#rpy"), $("#cx"), $("#cy")],
        c = [$("#radial-horizontal-position-unit"), $("#radial-vertical-position-unit"), $("#conic-horizontal-position-unit"), $("#conic-vertical-position-unit")],
        d = ["radialHorizontalPosition", "radialVerticalPosition", "conicHorizontalPosition", "conicVerticalPosition"],
        e = ["radialHorizontalPositionUnit",
            "radialVerticalPositionUnit", "conicHorizontalPositionUnit", "conicVerticalPositionUnit"
        ],
        f, h = b.length;
    for (f = 0; f < h; f++) a(b[f], c[f], d[f], e[f])
}

function _createAngSetting() {
    function a(g, k) {
        "linearOrientation" === k && ($(".setting__value[data-type='linearOrientation']").removeClass("setting__value--active"), $("#linear-angle-picker").addClass("anglepicker--active"));
        gradient[k] = g;
        gradient.updateGradientPreview();
        _updateGradientCSS(["bg_image"])
    }

    function b(g, k, l) {
        k.anglepicker({
            value: 0,
            change: function(p, n) {
                var m = n.value;
                a(m, l);
                g.val(m)
            }
        });
        g.on("keyup", function(p) {
            p = _getFromField($(this).val(), 0, 360, g);
            a(p, l);
            k.anglepicker("value", p)
        });
        g.spinner({
            min: 0,
            max: 360,
            value: 0,
            spin: function(p, n) {
                var m = n.value;
                a(m, l);
                k.anglepicker("value", m)
            }
        })
    }
    var c = [$("#linear-angle-value"), $("#conic-angle-value")],
        d = [$("#linear-angle-picker"), $("#conic-angle-picker")],
        e = ["linearOrientation", "conicStartAngle"],
        f, h = c.length;
    for (f = 0; f < h; f++) b(c[f], d[f], e[f])
}

function _sliderBarsHSL() {
    function a(g, k, l, p, n) {
        $("#" + g).on("keyup", function(m) {
            m = _getFromField($(this).val(), -180, 180, $("#" + g));
            $("#" + g + "-bar").slider("value", m);
            b[n](m)
        });
        $("#" + g).spinner({
            value: 0,
            min: k,
            max: l,
            step: 1,
            spin: function(m, r) {
                var q = r.value;
                $("#" + g + "-bar").slider("value", q);
                b[n](q)
            }
        });
        $("#" + g + "-bar").slider({
            value: 0,
            min: k,
            max: l,
            step: 1,
            slide: function(m, r) {
                var q = r.value;
                $("#" + g).val(q);
                b[n](q)
            }
        })
    }
    var b = [function(g) {
            g = parseFloat(g);
            var k = parseFloat($("#saturation").val()),
                l = parseFloat($("#lightness").val());
            _updateSaturationSlider($("#saturation-bar"), Math.round((g + 360 + 180) % 360), Math.round((l + 100) / 2));
            _updateLightnessSlider($("#lightness-bar"), Math.round((g + 360 + 180) % 360), Math.round((k + 100) / 2));
            gradient.updateHSLLevels(g, k, l)
        }, function(g) {
            var k = parseFloat($("#hue").val());
            g = parseFloat(g);
            var l = parseFloat($("#lightness").val());
            _updateLightnessSlider($("#lightness-bar"), Math.round((k + 360 + 180) % 360), Math.round((g + 100) / 2));
            _updateHueSlider($("#hue-bar"), Math.round((g + 100) / 2), Math.round((l + 100) / 2));
            gradient.updateHSLLevels(k,
                g, l)
        }, function(g) {
            var k = (parseFloat($("#hue").val()) + 360) % 360,
                l = parseFloat($("#saturation").val());
            g = parseFloat(g);
            _updateSaturationSlider($("#saturation-bar"), Math.round((k + 360 + 180) % 360), Math.round((g + 100) / 2));
            _updateHueSlider($("#hue-bar"), Math.round((l + 100) / 2), Math.round((g + 100) / 2));
            gradient.updateHSLLevels(k, l, g)
        }, function(g) {}],
        c = ["hue", "saturation", "lightness", "opacity"],
        d = [-180, -100, -100, 0],
        e = [180, 100, 100, 100],
        f, h = c.length;
    for (f = 0; f < h; f++) a(c[f], d[f], e[f], b[f], f);
    $("#opacity-bar").slider("option",
        "disabled", !0)
}

function _updateHueSlider(a, b, c) {
    var d = ["hsl(0, " + b + "%," + c + "%) ", "0%"];
    var e = "linear-gradient(to right, " + d[0] + "0%";
    for (var f = 1; 6 >= f; f++) {
        d = Math.round(f / 6 * 360);
        var h = Math.round(f / 6 * 100);
        d = ["hsl(" + d + "," + b + "%," + c + "%) ", h + "%"];
        e += ", " + d[0] + d[1]
    }
    a.css("background", e + ")")
}

function _updateLightnessSlider(a, b, c) {
    var d = ["hsl(" + b + "," + c + "%,0%)", "0%"];
    b = ["hsl(" + b + "," + c + "%,100%)", "100%"];
    d = "linear-gradient(to right, " + d[0] + d[1];
    d += ", " + b[0] + b[1] + ")";
    a.css("background", d)
}

function _updateSaturationSlider(a, b, c) {
    var d = ["hsl(" + b + ",0%," + c + "%)", "0%"];
    b = ["hsl(" + b + ",100%," + c + "%)", "100%"];
    d = "linear-gradient(to right, " + d[0] + d[1];
    d += ", " + b[0] + b[1] + ")";
    a.css("background", d)
}

function _linearSettingReset() {
    var a = gradient.linearOrientation;
    $(".setting__value[data-type='linearOrientation']").removeClass("setting__value--active");
    "number" === typeof a ? (-1 === Math.sign(a) && (a = 360 + a), $("#linear-angle-picker").anglepicker("value", a), $("#linear-angle-value").val(a), $("#linear-angle-picker").addClass("anglepicker--active")) : ($(".setting__value[data-type='linearOrientation'][data-value='" + a + "']").addClass("setting__value--active"), $("#linear-angle-picker").removeClass("anglepicker--active"))
}

function _RadialSettingReset() {
    var a = gradient.radialShape,
        b = gradient.radialSize,
        c = gradient.radialHorizontalSize,
        d = gradient.radialVerticalSize,
        e = gradient.radialHorizontalSizeUnit,
        f = gradient.radialVerticalSizeUnit,
        h = gradient.radialHorizontalPosition,
        g = gradient.radialVerticalPosition,
        k = gradient.radialHorizontalPositionUnit,
        l = gradient.radialVerticalPositionUnit;
    $(".setting__value[data-type='radialShape']").removeClass("setting__value--active");
    $(".setting__value[data-type='radialSize']").removeClass("setting__value--active");
    $(".setting__value[data-type='radialHorizontalPosition']").removeClass("setting__value--active");
    $(".setting__value[data-type='radialVerticalPosition']").removeClass("setting__value--active");
    "circle" === a ? ($("#sy").hide(), $("#radial-vertical-size-unit").hide(), $("#radial-horizontal-size-unit option[value=p]").hide()) : ($("#sy").show(), $("#radial-vertical-size-unit").show(), $("#radial-horizontal-size-unit option[value=p]").show());
    $(".setting__value[data-type='radialShape'][data-value='" + a + "']").addClass("setting__value--active");
    b.match(/closest-side|closest-corner|farthest-side|farthest-corner/) ? ($("#sx").val(0), $("#sy").val(0), $(".setting__value[data-type='radialSize'][data-value='" + b + "']").addClass("setting__value--active")) : ("%" === e && (e = "p"), "%" === f && (f = "p"), $("#sx").val(c), $("#sy").val(d), $("#radial-horizontal-size-unit option[value=" + e + "]")[0].selected = !0, $("#radial-horizontal-size-unit").addClass("setting__value--active"), $("#radial-vertical-size-unit option[value=" + f + "]")[0].selected = !0, $("#radial-vertical-size-unit").addClass("setting__value--active"));
    "number" === typeof h ? ("%" == k && (k = "p"), $("#rpx").val(h), $("#radial-horizontal-position-unit option[value=" + k + "]")[0].selected = !0, $("#radial-horizontal-position-unit").addClass("setting__value--active")) : ($("#rpx").val(0), $(".setting__value[data-type='radialHorizontalPosition'][data-value='" + h + "']").addClass("setting__value--active"));
    "number" === typeof g ? ("%" === l && (l = "p"), $("#rpy").val(g), $("#radial-vertical-position-unit option[value=" + l + "]")[0].selected = !0, $("#radial-vertical-position-unit").addClass("setting__value--active")) :
        ($("#rpy").val(0), $(".setting__value[data-type='radialVerticalPosition'][data-value='" + g + "']").addClass("setting__value--active"))
}

function _ConicSettingReset() {
    var a = gradient.conicStartAngle,
        b = gradient.conicHorizontalPosition,
        c = gradient.conicVerticalPosition,
        d = gradient.conicHorizontalPositionUnit,
        e = gradient.conicVerticalPositionUnit;
    $(".conicHorizontalPosition").removeClass("setting__value--active");
    $(".conicVerticalPosition").removeClass("setting__value--active");
    if (a || 0 === a) - 1 === Math.sign(a) && (a = 360 + a), $("#conic-angle-picker").anglepicker("value", a), $("#conic-angle-value").val(a);
    "number" === typeof b ? ("%" === d && (d = "p"), $("#cx").val(b),
        $("#conic-horizontal-position-unit option[value=" + d + "]")[0].selected = !0, $("#conic-horizontal-position-unit").addClass("setting__value--active")) : ($("#cx").val(0), $(".setting__value[data-type='conicHorizontalPosition'][data-value='" + b + "']").addClass("setting__value--active"));
    "number" === typeof c ? ("%" === e && (e = "p"), $("#cy").val(c), $("#conic-vertical-position-unit option[value=" + e + "]")[0].selected = !0, $("#conic-vertical-position-unit").addClass("setting__value--active")) : ($("#cy").val(0), $(".setting__value[data-type='conicVerticalPosition'][data-value='" +
        c + "']").addClass("setting__value--active"))
}

function _updateRepeatSetting() {
    var a = gradient.repeat;
    $(".setting__value[data-type='repeat']").removeClass("setting__value--active");
    a ? $(".setting__value[data-type='repeat'][data-value='true']").addClass("setting__value--active") : $(".setting__value[data-type='repeat'][data-value='false']").addClass("setting__value--active")
}

function _updateTypeSetting() {
    var a = gradient.type;
    "linear" === a ? ($("#linear-setting-block").show(), $("#radial-setting-block").hide(), $("#conic-setting-block").hide(), _linearSettingReset()) : "radial" === a ? ($("#radial-setting-block").show(), $("#linear-setting-block").hide(), $("#conic-setting-block").hide(), _RadialSettingReset()) : ($("#conic-setting-block").show(), $("#linear-setting-block").hide(), $("#radial-setting-block").hide(), _ConicSettingReset());
    $(".setting__value[data-type='type']").removeClass("setting__value--active");
    $(".setting__value[data-type='type'][data-value='" + a + "']").addClass("setting__value--active")
}
$(".setting__value[data-type='linearOrientation']").click(function() { $("#linear-angle-picker").removeClass("anglepicker--active") });

function _initSettings() {
    _updateRepeatSetting();
    _updateTypeSetting()
}

function _resetPanel() {
    var a = _getActiveElement();
    a = parseFloat(a.attr("position"));
    _resetHslPanel();
    $("#background-color").spectrum("set", gradient.backgroundColor);
    $("#color-location").val(a);
    $("#color-location-slider-bar").slider("value", a);
    $("#import-css-area").val("");
    $("#import-css-dialog").dialog("close");
    $("#hue-bar").css("background-image", "linear-gradient(to right, hsl(0,50%,50%) 0%, hsl(60,50%,50%) 17%, hsl(120,50%,50%) 33%, hsl(180,50%,50%) 50%, hsl(240,50%,50%) 67%, hsl(300,50%,50%) 83%, hsl(0,50%,50%) 100%)");
    $("#saturation-bar").css("background-image", "linear-gradient(to right, hsl(0,0%,50%) 0%, hsl(180,100%,50%) 100%)")
}

function _resetHslPanel() {
    var a = gradient.colorStops[gradient.colorStops.length - 1].color.displayColor("rgba");
    $("#color-value-button").spectrum("set", a);
    $("#hue").val(0);
    $("#saturation").val(0);
    $("#lightness").val(0);
    $("#hue-bar").slider("value", 0);
    $("#saturation-bar").slider("value", 0);
    $("#lightness-bar").slider("value", 0)
}

function _getFromField(a, b, c, d) { if ("" != a && "-" != a) return a = parseFloat(a), isNaN(a) ? a = 0 : a < b ? a = b : a > c && (a = c), d.val(a), a }
$("#save-preset-btn").click(function() {
    var a = localStorage.getItem("swatches16"),
        b = _getGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"]);
    b = { v: b.bg_image, w: b.bg_size, x: b.bg_position, y: b.bg_repeat, z: b.bg_color };
    a || (a = [], a.push(b), localStorage.setItem("swatches16", JSON.stringify(a)), a = localStorage.getItem("swatches16"));
    a = JSON.parse(a);
    a.push(b);
    localStorage.setItem("swatches16", JSON.stringify(a));
    _importGradientFromLocalStorage(a.length - 1, a[a.length - 1])
});
$("#delete-preset-btn").click(function() {
    var a = $(".actual").data("index");
    if (0 === a || a) {
        var b = JSON.parse(localStorage.getItem("swatches16"));
        a = b[a];
        a = b.indexOf(a); - 1 !== a && b.splice(a, 1);
        localStorage.setItem("swatches16", JSON.stringify(b));
        $(".presets-list").html("");
        _importAllGradientsFromLocalStorage()
    } else alert("Please select a preset to delete")
});
$(".facebook").click(function() { window.open("https://www.facebook.com/sharer/sharer.php?u=www.cssgradienteditor.com") });
$(".twitter").click(function() { window.open("https://twitter.com/intent/tweet?url=https://www.cssgradienteditor.com&text=") });
$("#color-format").selectmenu({
    change: function() {
        gradient.saveHSLStops();
        var a = $(this).val();
        gradient.format = gradient.changeFormatColor(a);
        _updateGradientCSS(["bg_image"])
    }
});
$("#do").click(function() { _getActiveElement().attr("position") });
$("#format").click(function() {
    $("#dialog-2").dialog("open");
    var a = gradient.showFormatColor("hsla"),
        b = gradient.showFormatColor("hex");
    $("#hsla-format").css("background-image", a);
    $("#hex-format").css("background-image", b);
    a = _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"]);
    $("#hsla-format").css("background-size", a.bg_size);
    $("#hsla-format").css("background-position", a.bg_position);
    $("#hsla-format").css("background-repeat", a.bg_repeat);
    $("#hsla-format").css("background-color",
        a.bg_color);
    $("#hex-format").css("background-size", a.bg_size);
    $("#hex-format").css("background-position", a.bg_position);
    $("#hex-format").css("background-repeat", a.bg_repeat);
    $("#hex-format").css("background-color", a.bg_color)
});
$("#gradient").click(function() { _updateGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"]) });
$("#update-value-btn").click(function() {
    var a = _getGradientCSS(["bg_image", "bg_size", "bg_position", "bg_repeat", "bg_color"], !0);
    a = "background-image:" + a.bg_image + "; background-size:" + a.bg_size + "; background-position:" + a.bg_position + "; background-repeat:" + a.bg_repeat + "; background-color: " + a.bg_color + ";";
    a = escape(a).replace(/%/g, "\\%").replace(/\./g, "\\.").replace(/\-/g, "\\-");
    history.pushState(null, null, "#" + a)
});
console.timeEnd("hex");
var addAMarkMini = !0;

function addAGrad() {
    var a = EDITOR.width();
    this.repeat = !1;
    this.type = "linear";
    this.format = "rgba";
    this.widthDefault = a || 560;
    this.colorDefault0 = new UserColor({ format: "rgba", color: { r: 46, g: 84, b: 117, a: 1 } });
    this.colorDefault1 = new UserColor({ format: "rgba", color: { r: 255, g: 37, b: 0, a: 1 } });
    this.colorStops = [{ color: this.colorDefault0.clone(), location: 10, htmlBlock: _createStopMarkerMini(0, { color: this.colorDefault0, location: 10 }, this.widthDefault) }, {
        color: this.colorDefault1.clone(),
        location: 90,
        htmlBlock: _createStopMarkerMini(1, { color: this.colorDefault1, location: 90 }, this.widthDefault)
    }]
}
addAGrad.prototype.getStopMarker = function(a, b) {
    var c, d = this.colorStops,
        e = d.length,
        f = !1;
    if (b)
        for (c = 0; c < e; c++) { if (d[c].htmlBlock.hasClass("selected")) { f = d[c]; break } } else
            for (c = 0; c < e; c++)
                if (d[c].location === a) { f = d[c]; break }
    return f
};
addAGrad.prototype.addStopMarker = function(a, b, c) {
    var d = b.location,
        e = 0,
        f = [];
    f = f.concat(a, [b]);
    f.sort(function(h, g) { return h.location - g.location });
    for (e = 0; e < f.length; e++) f[e] === b ? (f[e].htmlBlock = _createStopMarkerMini(e, b, this.widthDefault), f[e].htmlBlock.addClass("selected")) : f[e].location >= b.location ? f[e].htmlBlock ? (f[e].htmlBlock.removeClass("selected"), f[e].htmlBlock.attr("position", f[e].location), f[e].htmlBlock.attr("imarker", e)) : f[e].htmlBlock = _createStopMarkerMini(e, b, this.widthDefault) : f[e].htmlBlock.removeClass("selected");
    if (c) {
        a = [];
        b = [];
        c = f.length;
        for (e = 0; e < c; e++) f[e].location === d && (a.push(e), b.push(f[e]));
        if (1 < a.length)
            for (e = b.length, b.unshift(b.pop()), d = 0; d < e; d++) f[a[d]] = b[d]
    }
    this.colorStops = f
};
addAGrad.prototype.removeStopMarker = function(a, b, c) {
    var d, e, f = a.length,
        h = !1;
    if (2 >= a.length) return null;
    var g = [];
    for (d = 0; d < f; d++)
        if (a[d].location != b) g.push(a[d]);
        else if (e = (e = c && c.equals(this.colorStops[d].color)) || !c) { h = a[d]; break } else g.push(a[d]);
    for (b = d + 1; b < f; b++) a[b].htmlBlock.attr("position", a[b].location), a[b].htmlBlock.attr("imarker", b - 1), g.push(a[b]);
    this.colorStops = g;
    return h
};
addAGrad.prototype.showAllColorStops = function() { var a = this.colorStops; var b = a.length - 1; for ($(".add-gradient__stop-markers").html(""); 0 <= b; b--) a[b].htmlBlock = eventDraggableMini(".add-gradient__stop-markers", a[b].htmlBlock), a[b].htmlBlock.appendTo($(".add-gradient__stop-markers")) };
addAGrad.prototype.updateMarks = function(a) {
    var b, c = a.length;
    for (b = 0; b < c; b++) {
        var d = a[b].color.displayColor("rgba");
        var e = colorStops[b].htmlBlock;
        e.attr("color", d);
        e.trinity.attr("color", d);
        e.trinity.css("background-color", d)
    }
};
addAGrad.prototype.updateGradient = function() {
    var a, b = this.colorStops,
        c = b.length,
        d = this.format;
    var e = "" + _displayColorStop(b[0].color, b[0].location, d);
    for (a = 1; a < c; a++) e += ", " + _displayColorStop(b[a].color, b[a].location, d);
    $(".gradient-real-mini").css("background-image", "linear-gradient(to right," + e + ")");
    e = this.type + "-gradient(" + e + ")";
    this.repeat && (e = "repeating-" + e);
    $(".add-gradient__preview").css("background-image", e);
    e = "background-image: " + e + ";";
    $(".add-gradient__input").val(e)
};

function _refreshLocationMini(a, b) {
    var c = {};
    var d = a.attr("position");
    var e = parseColor(a.attr("color"));
    c.location = b;
    c.color = e;
    b > parseFloat(d) ? newgrad.addStopMarker(newgrad.colorStops, c, !0) : newgrad.addStopMarker(newgrad.colorStops, c, !1);
    newgrad.removeStopMarker(newgrad.colorStops, d, e);
    newgrad.showAllColorStops()
}

function _createStopMarkerMini(a, b, c) {
    var d = $("<div></div>");
    var e = b.color.clone();
    var f = $("<div class='color-knob-mini'></div>");
    f.append(d);
    d.css("background-color", e.displayColor("rgba"));
    f.attr("title", "Color stop");
    f.attr("color", e.displayColor("rgba"));
    f.addClass("stop-marker");
    f.attr("position", b.location);
    f.attr("imarker", a);
    f.css("left", b.location * c / 100 + "px");
    f.trinity = d;
    return f
}

function eventDraggableMini(a, b) {
    b.draggable({
        axis: "x",
        containment: a,
        start: function(c, d) {
            draggedMarker = newgrad.getStopMarker(parseInt(d.helper.attr("position")), !1);
            _getActiveElementMini().removeClass("selected");
            $(this).addClass("selected")
        },
        drag: function(c) {
            draggedMarker = _dragAndDropMini(this, draggedMarker);
            newgrad.updateGradient()
        },
        stop: function(c) {
            draggedMarker = _dragAndDropMini(this, draggedMarker);
            draggedMarker = null;
            newgrad.showAllColorStops();
            newgrad.updateGradient()
        }
    });
    b.css("position", "");
    return b
}

function _getActiveElementMini() {
    var a = $(".add-gradient__stop-markers .selected");
    0 === a.length && (a = $($(".add-gradient__stop-markers .stop-marker")[0]), a.addClass("selected"));
    return a
}

function _dragAndDropMini(a, b) {
    var c = Math.round(a.offsetLeft / newgrad.widthDefault * 100),
        d = b.location;
    if (d == c) return b;
    100 <= c && (c = 100, b.htmlBlock.css("left", a.widthDefault + "px"));
    var e = {};
    e.location = c;
    e.htmlBlock = b.htmlBlock.clone();
    e.htmlBlock.attr("position", c);
    e.color = b.color.clone();
    c > d ? newgrad.addStopMarker(newgrad.colorStops, e, !0) : newgrad.addStopMarker(newgrad.colorStops, e, !1);
    newgrad.removeStopMarker(newgrad.colorStops, d, b.color);
    $("#add-gradient__color-location").val(c);
    return e
}

function updateInfoMini(a) {
    var b = _getActiveElementMini();
    var c = parseFloat(b.attr("position"));
    var d = newgrad.getStopMarker(c, !0);
    d && (c = a.displayColor("rgba"), d.color = a, d.htmlBlock.attr("color", c), b.children().css("background-color", c), newgrad.updateGradient())
}

function _selectAMarkMini() {
    var a = _getActiveElementMini().attr("position");
    $("#add-gradient__color-location").val(a)
}
var newgrad = new addAGrad;
newgrad.showAllColorStops();
newgrad.updateGradient();
_selectAMarkMini();
$(".add-gradient__repeat").click(function() {
    repeat ? (newgrad.repeat = !1, $(this).removeClass("active")) : (newgrad.repeat = !0, $(this).addClass("active"));
    updateGradient()
});
$("#mini-show").click(function() {});
$("#add-gradient__color-location").spinner({
    min: 0,
    max: 100,
    spin: function(a, b) {
        _refreshLocationMini(_getActiveElementMini(), b.value);
        newgrad.updateGradient()
    }
});
$("#mini-type-selectmenu").selectmenu({
    change: function() {
        newgrad.type = $(this).val();
        newgrad.updateGradient()
    }
});
$(".add-gradient__stop-markers").on("click", function(a) {
    if (addAMarkMini) {
        a = _calculatePosition(a.clientX - (this.offsetParent.offsetLeft + this.offsetLeft), newgrad.widthDefault);
        var b = $("#add-gradient__color-value-button").spectrum("get").toRgbString();
        if (b) var c = parseColor(b);
        newgrad.addStopMarker(newgrad.colorStops, { color: c, location: a });
        newgrad.showAllColorStops();
        newgrad.updateGradient();
        _selectAMarkMini()
    }
    addAMarkMini = !0
});
$(".add-gradient__stop-markers").on("click", ".color-knob-mini", function(a) {
    addAMarkMini = !1;
    a = $(this).attr("color");
    _getActiveElementMini().removeClass("selected");
    $(this).addClass("selected");
    _selectAMarkMini();
    $("#add-gradient__color-value-button").spectrum("set", a);
    $("#add-gradient__color-value-button").spectrum("show");
    return !1
});
$("#add-gradient__delete").on("click", function(a) {
    a = $(".add-gradient__stop-markers .selected");
    if (0 === a.length) return !1;
    var b = parseInt(a.attr("position")),
        c = parseColor(a.attr("color"));
    (b || 0 == b) && newgrad.removeStopMarker(newgrad.colorStops, b, c) && (a.remove(), newgrad.showAllColorStops());
    newgrad.updateGradient();
    a = parseFloat(_getActiveElementMini().attr("position"));
    b = _getActiveElementMini().attr("color");
    $("#add-gradient__color-value-button").spectrum("set", b);
    $("#add-gradient__color-location").val(a);
    return !1
});